{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"angular\"","webpack:///./src/ng-weekly-scheduler/app/module.ts","webpack:///./src/ng-weekly-scheduler.less?f909","webpack:///./src/ng-weekly-scheduler.less","webpack:///./src/ng-weekly-scheduler/adapter/module.ts","webpack:///./src/ng-weekly-scheduler/adapter/AdapterService.ts","webpack:///./src/ng-weekly-scheduler/configuration/module.ts","webpack:///./src/ng-weekly-scheduler/configuration/ConfigurationService.ts","webpack:///./src/ng-weekly-scheduler/conflicting-options/module.ts","webpack:///./src/ng-weekly-scheduler/conflicting-options/ConflictingOptionsService.ts","webpack:///./src/ng-weekly-scheduler/drag/module.ts","webpack:///./src/ng-weekly-scheduler/drag/DragService.ts","webpack:///./src/ng-weekly-scheduler/element-offset/module.ts","webpack:///./src/ng-weekly-scheduler/element-offset/ElementOffsetService.ts","webpack:///./src/ng-weekly-scheduler/end-adjuster/module.ts","webpack:///./src/ng-weekly-scheduler/end-adjuster/EndAdjusterService.ts","webpack:///./src/ng-weekly-scheduler/fill-empty-with-default/module.ts","webpack:///./src/ng-weekly-scheduler/fill-empty-with-default/FillEmptyWithDefaultService.ts","webpack:///./src/ng-weekly-scheduler/full-calendar/module.ts","webpack:///./src/ng-weekly-scheduler/full-calendar/FullCalendarDirective.ts","webpack:///./src/ng-weekly-scheduler/ghost-slot/module.ts","webpack:///./src/ng-weekly-scheduler/ghost-slot/ghost-slot.ts","webpack:///./src/ng-weekly-scheduler/ghost-slot/ghost-slot.html","webpack:///./src/ng-weekly-scheduler/group-by/module.ts","webpack:///./src/ng-weekly-scheduler/group-by/GroupService.ts","webpack:///./src/ng-weekly-scheduler/handle/module.ts","webpack:///./src/ng-weekly-scheduler/handle/HandleDirective.ts","webpack:///./src/ng-weekly-scheduler/hourly-grid/module.ts","webpack:///./src/ng-weekly-scheduler/hourly-grid/HourlyGridDirective.ts","webpack:///./src/ng-weekly-scheduler/last-ghost-day/module.ts","webpack:///./src/ng-weekly-scheduler/last-ghost-day/LastGhostDayService.ts","webpack:///./src/ng-weekly-scheduler/max-time-slot/module.ts","webpack:///./src/ng-weekly-scheduler/max-time-slot/MaxTimeSlotDirective.ts","webpack:///./src/ng-weekly-scheduler/minimum-separation/module.ts","webpack:///./src/ng-weekly-scheduler/minimum-separation/MinimumSeparationDirective.ts","webpack:///./src/ng-weekly-scheduler/missing-days/module.ts","webpack:///./src/ng-weekly-scheduler/missing-days/MissingDaysService.ts","webpack:///./src/ng-weekly-scheduler/mono-schedule/module.ts","webpack:///./src/ng-weekly-scheduler/mono-schedule/MonoScheduleDirective.ts","webpack:///./src/ng-weekly-scheduler/mouse-tracker/module.ts","webpack:///./src/ng-weekly-scheduler/mouse-tracker/MouseTrackerService.ts","webpack:///./src/ng-weekly-scheduler/multislider/module.ts","webpack:///./src/ng-weekly-scheduler/multislider/multislider.ts","webpack:///./src/ng-weekly-scheduler/multislider/multislider.html","webpack:///./src/ng-weekly-scheduler/null-end/module.ts","webpack:///./src/ng-weekly-scheduler/null-end/NullEndDirective.ts","webpack:///./src/ng-weekly-scheduler/overlap/module.ts","webpack:///./src/ng-weekly-scheduler/overlap/OverlapDirective.ts","webpack:///./src/ng-weekly-scheduler/overlap/OverlapService.ts","webpack:///./src/ng-weekly-scheduler/purge-default/module.ts","webpack:///./src/ng-weekly-scheduler/purge-default/PurgeDefaultService.ts","webpack:///./src/ng-weekly-scheduler/resize/module.ts","webpack:///./src/ng-weekly-scheduler/resize/ResizeService.ts","webpack:///./src/ng-weekly-scheduler/restriction-explanations/module.ts","webpack:///./src/ng-weekly-scheduler/restriction-explanations/RestrictionExplanationsComponent.ts","webpack:///./src/ng-weekly-scheduler/revalidate/module.ts","webpack:///./src/ng-weekly-scheduler/revalidate/RevalidateDirective.ts","webpack:///./src/ng-weekly-scheduler/schedule-area-container/module.ts","webpack:///./src/ng-weekly-scheduler/schedule-area-container/schedule-area-container.ts","webpack:///./src/ng-weekly-scheduler/schedule-area-container/schedule-area-container.html","webpack:///./src/ng-weekly-scheduler/schedule-count/module.ts","webpack:///./src/ng-weekly-scheduler/schedule-count/ScheduleCountDirective.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/module.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/FullCalendarValidatorService.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/MaxTimeSlotValidatorService.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/MinimumSeparationValidatorService.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/MonoScheduleValidatorService.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/NullEndValidatorService.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/OverlapValidatorService.ts","webpack:///./src/ng-weekly-scheduler/schedule-validator/ScheduleCountValidatorService.ts","webpack:///./src/ng-weekly-scheduler/scroll/module.ts","webpack:///./src/ng-weekly-scheduler/scroll/ScrollService.ts","webpack:///./src/ng-weekly-scheduler/time/module.ts","webpack:///./src/ng-weekly-scheduler/time/SecondsAsTextFilter.ts","webpack:///./src/ng-weekly-scheduler/time/TimeConstantsService.ts","webpack:///./src/ng-weekly-scheduler/time/TimeOfDayFilter.ts","webpack:///./src/ng-weekly-scheduler/time-range/module.ts","webpack:///./src/ng-weekly-scheduler/time-range/TimeRangeComponent.ts","webpack:///./src/ng-weekly-scheduler/touch/module.ts","webpack:///./src/ng-weekly-scheduler/touch/TouchService.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-config/module.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-config/DayMap.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-config/NullEndWidth.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler/module.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler/weekly-scheduler.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler/weekly-scheduler.html","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-item/module.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-item/WeeklySchedulerItemFactory.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-item/WeeklySchedulerItem.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-range/module.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-range/WeeklySchedulerRangeFactory.ts","webpack:///./src/ng-weekly-scheduler/weekly-scheduler-range/WeeklySchedulerRange.ts","webpack:///./src/ng-weekly-scheduler/weekly-slot/module.ts","webpack:///./src/ng-weekly-scheduler/weekly-slot/weekly-slot.ts","webpack:///./src/ng-weekly-scheduler/weekly-slot/weekly-slot.html","webpack:///./src/ng-weekly-scheduler/value-normalization/module.ts","webpack:///./src/ng-weekly-scheduler/value-normalization/ValueNormalizationService.ts","webpack:///./src/ng-weekly-scheduler/zoom/module.ts","webpack:///./src/ng-weekly-scheduler/zoom/ZoomService.ts","webpack:///./src/index.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","angular","module_1","module_2","module_3","module_4","module_5","module_6","module_7","module_8","module_9","module_10","module_11","module_12","module_13","module_14","module_15","module_16","module_17","module_18","module_19","module_20","module_21","module_22","module_23","module_24","module_25","module_26","module_27","module_28","module_29","module_30","module_31","module_32","module_33","module_34","module_35","module_36","module_37","module_38","module_39","default","content","options","hmr","transform","insertInto","undefined","locals","AdapterService_1","service","AdapterService","$name","groupService","itemFactory","this","getItemsFromAdapter","config","adapter","schedules","initialData","map","customModelToWeeklySchedulerRange","groupedSchedules","groupSchedules","item","createItem","parseInt","$inject","ConfigurationService_1","ConfigurationService","timeConstants","getConfiguration","interval","intervalCount","SECONDS_IN_DAY","defaultOptions","getDefaultOptions","userOptions","merge","extend","maxValue","hourCount","HOURS_IN_DAY","day","monoSchedule","onChange","noop","onRemove","restrictionExplanations","maxTimeSlot","minimumSeparation","fullCalendar","nullEnds","scheduleCount","pluralizedSlot","count","exact","scheduleCountOptions","ConflictingOptionsService_1","ConflictingOptionsService","getConflictingOptions","fillEmptyWithDefault","isDefined","defaultValue","DragService_1","DragService","endAdjusterService","nullEndWidth","rangeFactory","getDragRangeFromSchedule","schedule","createRange","start","end","adjustEndForView","ElementOffsetService_1","ElementOffsetService","left","$element","getBoundingClientRect","right","EndAdjusterService_1","EndAdjusterService","adjustEndForModel","FillEmptyWithDefaultService_1","FillEmptyWithDefaultService","fill","getFilledSchedules","getEmptySchedule","getEndSchedule","lastSchedule","getStartSchedule","firstSchedule","getFilledSchedulesForSingleSchedule","shouldFillNullEnd","getNullEndValue","scheduleTouchesStart","scheduleTouchesEnd","getSortedSchedules","len","currentSchedule","nextSchedule","startSchedule","schedulesTouch","newSchedule","getNewSchedule","endSchedule","fillNullEnds","sort","a","b","earlierSchedule","laterSchedule","FullCalendarDirective_1","directive","FullCalendarDirective","Factory","validator","_this","link","scope","element","attrs","ngModelCtrl","brFullCalendar","$validators","error","modelValue","validate","require","ghost_slot_1","component","GhostSlotComponent","controller","GhostSlotController","$controllerAs","controllerAs","multiSliderCtrl","template","transclude","GroupService_1","GroupService","reduce","reducer","index","array","HandleDirective_1","HandleDirective","$document","mouseTrackerService","touchService","restrict","ondrag","ondragstop","ondragstart","immediate","x","mousemoveEvent","mouseupEvent","getPageX","event","pageX","mousemove","delta","isFunction","$apply","mouseup","unbind","startDrag","on","$applyAsync","preventDefault","stopPropagation","getMousePosition","HourlyGridDirective_1","HourlyGridDirective","GRID_TEMPLATE","schedulerCtrl","doGrid","handleClickEvent","child","idx","$emit","nbElements","tickcount","gridItemEl","clone","empty","addClass","isUndefined","noText","currentHour","meridiem","text","numIntervalsInTick","SECONDS_IN_HOUR","intervalPercentage","grandChild","attr","css","append","LastGhostDayService_1","LastGhostDayService","getLastGhostDay","items","originIndex","getOriginIndex","renderedGhostIndices","getRenderedGhostIndices","above","every","$isGhostOrigin","$renderGhost","MaxTimeSlotDirective_1","MaxTimeSlotDirective","brMaxTimeSlot","MinimumSeparationDirective_1","MinimumSeparationDirective","brMinimumSeparation","MissingDaysService_1","MissingDaysService","dayMap","fillItems","forEach","stringKey","filteredItems","filter","label","copy","MonoScheduleDirective_1","MonoScheduleDirective","brMonoSchedule","MouseTrackerService_1","MouseTrackerService","run","initialize","setMousePosition","mousePosition","y","pageY","multislider_1","MultiSliderComponent","MultiSliderController","$q","$scope","elementOffsetService","valueNormalizationService","$postLink","onMouseEnter","onMouseLeave","onMouseUp","$on","ghostSchedule","commitGhost","removeGhost","dragSchedule","addDragSchedule","ghostValues","createGhost","removeDragSchedule","pendingSchedule","commitDragSchedule","addSchedule","$isActive","removeSchedule","$setDirty","mergeSchedule","getScheduleForAdd","normalizeValue","openEditorForAdd","canEdit","editSlot","when","adjustGhost","updatedLeftValue","updatedRightValue","point","mouseValue","getValAtMousePosition","existingLeftValue","startingGhostValues","normalizeGhostValue","setGhostValues","positionGhost","val","onGhostWrapperMouseDown","editable","onGhostWrapperMouseMove","onGhostWrapperMouseUp","then","editedGhostSchedule","catch","canAddSchedule","addScheduleAndMerge","pixelToVal","editSchedule","$isEditing","originalSchedule_1","range","shouldDelete","premergeSchedule","equals","update","finally","getSlotLeft","getUnderlyingInterval","offsetLeft","getSlotRight","underlyingInterval","offsetRight","offsetWidth","clientWidth","normalizeIntervalValue","parentElement","querySelector","$isDeleting","pixel","percent","Math","floor","rightmost","bindings","NullEndDirective_1","NullEndDirective","OverlapDirective_1","OverlapService_1","OverlapDirective","OverlapService","getOverlapState","current","other","currentStart","currentEnd","otherStart","otherEnd","PurgeDefaultService_1","PurgeDefaultService","purge","ResizeService_1","provider","ResizeServiceProvider","resizeService","customResizeEvents","serviceInitialized","$get","setCustomResizeEvents","events","$rootScope","$window","addEventListener","$broadcast","RestrictionExplanationsComponent_1","RestrictionExplanationsComponent","RestrictionExplanationsController","$filter","explanations","$onInit","RevalidateDirective_1","RevalidateDirective","$watch","ngModel","$validate","schedule_area_container_1","ScheduleAreaContainerComponent","ScheduleAreaContainerController","scrollService","zoomService","hijackScroll","resetZoom","e","zoomInACell","zoomIn","ScheduleCountDirective_1","ScheduleCountDirective","brScheduleCount","FullCalendarValidatorService_1","MaxTimeSlotValidatorService_1","MinimumSeparationValidatorService_1","MonoScheduleValidatorService_1","NullEndValidatorService_1","OverlapValidatorService_1","ScheduleCountValidatorService_1","FullCalendarValidatorService","MaxTimeSlotValidatorService","MinimumSeparationValidatorService","MonoScheduleValidatorService","NullEndScheduleValidatorService","OverlapValidatorService","ScheduleCountValidatorService","validateStartAtMinValue","validateEndAtMaxValue","loopLen","next","some","schedulesToValidate","overlapService","overlapState","indexOf","validateExactCount","validateMaxCount","ScrollService_1","ScrollService","ctrlKey","zoomByScroll","wheelDelta","detail","scrollLeft","SecondsAsTextFilter_1","TimeConstantsService_1","TimeOfDayFilter_1","SecondsAsTextFilter","TimeOfDayFilter","TimeConstantsService","factoryFunction","seconds","hours","addHoursToResult","minutes","SECONDS_IN_MINUTE","addMinutesToResult","addSecondsToResult","MINUTES_IN_DAY","MINUTES_IN_HOUR","remainingMinutes","toString","displayHours","TimeRangeComponent_1","TimeRangeComponent","TimeRangeController","hasStart","hasEnd","TouchService_1","TouchService","getTouches","originalEvent","touches","changedTouches","DayMap_1","NullEndWidth_1","constant","DayMap","NullEndWidth","_a","weekly_scheduler_1","WeeklySchedulerComponent","WeeklySchedulerController","$timeout","adapterService","configurationService","conflictingOptionsService","lastGhostDayService","missingDaysService","invalidMessage","buildItemsFromAdapter","watchAdapter","watchHoverClass","lastGhostDay","getInvalidMessage","conflictingOptions","hasInvalidSchedule","formController","$invalid","buildItems","purgeItems","mergeOverlaps","_originalItems","_i","items_1","purgeDefaultSchedules","forceNullEnds","prepareItems","items_2","fillEmptySlotsWithDefaultSchedules","rollback","$setPristine","save","saveScheduler","hoverClass","find","removeClass","WeeklySchedulerItemFactory_1","WeeklySchedulerItemFactory","WeeklySchedulerItem_1","fillEmptyWithDefaultService","purgeDefaultService","builder","WeeklySchedulerItem","hasNoSchedules","hasEditFunction","canEditSchedule","itemIsEditable","scheduleIsEditable","canRenderGhost","hasSchedule","mergeOverlapsForSchedule","needsOverlapsMerged","getOverlapHandler","handleNoOverlap","handleCurrentIsInsideOther","handleCurrentCoversOther","handleOtherEndIsInsideCurrent","handleOtherStartIsInsideCurrent","handleOtherEndIsCurrentStart","handleOtherStartIsCurrentEnd","hasSameValueAs","el","overlapHandler","WeeklySchedulerRangeFactory_1","WeeklySchedulerRangeFactory","WeeklySchedulerRange_1","WeeklySchedulerRange","$class","updatedSchedule","updatedStart","updateStart","updatedEnd","updateEnd","canUpdateEnd","canUpdateStart","changed","newEndBeforeOrAtMax","newEndAfterOrAtExistingStart","newStartBeforeOrAtExistingEnd","newStartAfterOrAtMin","weekly_slot_1","WeeklySlotComponent","WeeklySlotController","dragService","getDragStartValues","editSelf","drag","ui","getDelta","newStart","round","valuesOnDragStart","newEnd","duration","endDrag","endResize","resizeStart","resizeEnd","startResize","ValueNormalizationService_1","ValueNormalizationService","min","max","ZoomService_1","ZoomService","selector","broadcastZoomedInEvent","broadcastZoomedOutEvent","getCurrentZoomWidth","style","width","getZoomElement","container","setZoomWidth","zoom","level","elementCount","containerWidth","boxWidth","gutterSize","scheduleAreaWidthPercent","currentWidth","__export"],"mappings":"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","file":"angular-weekly-scheduler.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([106,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","module.exports = angular;","import * as angular from 'angular';\r\nimport '../../ng-weekly-scheduler.less';\r\n\r\nimport AdapterModule from '../adapter/module';\r\nimport ConfigurationModule from '../configuration/module';\r\nimport ConflictingOptionsModule from '../conflicting-options/module';\r\nimport DragModule from '../drag/module';\r\nimport ElementOffsetModule from '../element-offset/module';\r\nimport EndAdjusterModule from '../end-adjuster/module';\r\nimport FillEmptyWithDefaultModule from '../fill-empty-with-default/module';\r\nimport FullCalendarModule from '../full-calendar/module';\r\nimport GhostSlotModule from '../ghost-slot/module';\r\nimport GroupByModule from '../group-by/module';\r\nimport HandleModule from '../handle/module';\r\nimport HourlyGridModule from '../hourly-grid/module';\r\nimport LastGhostDayModule from '../last-ghost-day/module';\r\nimport MaxTimeSlotModule from '../max-time-slot/module';\r\nimport MinimumSeparationModule from '../minimum-separation/module';\r\nimport MissingDaysModule from '../missing-days/module';\r\nimport MonoScheduleModule from '../mono-schedule/module';\r\nimport MouseTrackerModule from '../mouse-tracker/module';\r\nimport MultiSliderModule from '../multislider/module';\r\nimport NullEndModule from '../null-end/module';\r\nimport OverlapModule from '../overlap/module';\r\nimport PurgeDefaultModule from '../purge-default/module';\r\nimport ResizeModule from '../resize/module';\r\nimport RestrictionExplanationsModule from '../restriction-explanations/module';\r\nimport RevalidateModule from '../revalidate/module';\r\nimport ScheduleAreaContainerModule from '../schedule-area-container/module';\r\nimport ScheduleCountModule from '../schedule-count/module';\r\nimport ScheduleValidationModule from '../schedule-validator/module';\r\nimport ScrollModule from '../scroll/module';\r\nimport TimeModule from '../time/module';\r\nimport TimeRangeModule from '../time-range/module';\r\nimport TouchModule from '../touch/module';\r\nimport WeeklySchedulerConfigModule from '../weekly-scheduler-config/module';\r\nimport WeeklySchedulerModule from '../weekly-scheduler/module';\r\nimport WeeklySchedulerItemModule from '../weekly-scheduler-item/module';\r\nimport WeeklySchedulerRangeModule from '../weekly-scheduler-range/module';\r\nimport WeeklySlotModule from '../weekly-slot/module';\r\nimport ValueNormalizationModule from '../value-normalization/module';\r\nimport ZoomModule from '../zoom/module';\r\n\r\nexport default angular.module('br.weeklyScheduler.app', [\r\n    AdapterModule,\r\n    ConfigurationModule,\r\n    ConflictingOptionsModule,\r\n    DragModule,\r\n    ElementOffsetModule,\r\n    EndAdjusterModule,\r\n    FillEmptyWithDefaultModule,\r\n    FullCalendarModule,\r\n    GroupByModule,\r\n    GhostSlotModule,\r\n    HandleModule,\r\n    HourlyGridModule,\r\n    LastGhostDayModule,\r\n    MaxTimeSlotModule,\r\n    MinimumSeparationModule,\r\n    MonoScheduleModule,\r\n    MouseTrackerModule,\r\n    MissingDaysModule,\r\n    MultiSliderModule,\r\n    NullEndModule,\r\n    OverlapModule,\r\n    PurgeDefaultModule,\r\n    ResizeModule,\r\n    RestrictionExplanationsModule,\r\n    RevalidateModule,\r\n    ScheduleAreaContainerModule,\r\n    ScheduleCountModule,\r\n    ScheduleValidationModule,\r\n    ScrollModule,\r\n    TimeModule,\r\n    TimeRangeModule,\r\n    TouchModule,\r\n    WeeklySchedulerConfigModule,\r\n    WeeklySchedulerModule,\r\n    WeeklySchedulerItemModule,\r\n    WeeklySchedulerRangeModule,\r\n    WeeklySlotModule,\r\n    ValueNormalizationModule,\r\n    ZoomModule\r\n])\r\n.name;\r\n","\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./ng-weekly-scheduler.less\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./ng-weekly-scheduler.less\", function() {\n\t\tvar newContent = require(\"!!../node_modules/css-loader/dist/cjs.js!../node_modules/less-loader/dist/cjs.js!./ng-weekly-scheduler.less\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../node_modules/css-loader/dist/runtime/api.js\")(false);\n// Module\nexports.push([module.id, \"br-weekly-scheduler {\\n  background: #fff;\\n  border-left: 1px solid #ddd;\\n  border-right: 1px solid #ddd;\\n  border-top: 1px solid #ddd;\\n  color: #1c1c1c;\\n  display: block;\\n  margin-bottom: 10px;\\n  /* The dark class will be applied by a client on the outside of this component */\\n}\\nbr-weekly-scheduler br-multi-slider .slot.active {\\n  box-shadow: 0px 0px 2px 2px #1c1c1c;\\n}\\nbr-weekly-scheduler br-multi-slider .slot.nullEnd {\\n  background: linear-gradient(to right, currentColor, rgba(255, 255, 255, 0.5));\\n}\\nbr-weekly-scheduler br-multi-slider .slot span {\\n  color: #fff;\\n  display: block;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\nbr-weekly-scheduler .labels {\\n  border-right: 1px solid #ddd;\\n}\\nbr-weekly-scheduler .striped > div:nth-child(even) {\\n  background-color: #f6f6f6;\\n}\\nbr-weekly-scheduler .srow {\\n  border-bottom: 1px solid #ddd;\\n}\\nbr-weekly-scheduler .timestamps div {\\n  border-width: 2px;\\n}\\nbr-weekly-scheduler .timestamps div:hover {\\n  background-color: #f6f6f6;\\n}\\nbr-weekly-scheduler .buttons div {\\n  display: inline-block;\\n}\\n.dark br-weekly-scheduler {\\n  background: #1c1c1c;\\n  border-left: 1px solid #777;\\n  border-right: 1px solid #777;\\n  border-top: 1px solid #777;\\n  color: #fff;\\n}\\n.dark br-weekly-scheduler br-multi-slider .slot.active {\\n  box-shadow: 0px 0px 2px 2px #fff;\\n}\\n.dark br-weekly-scheduler br-multi-slider .slot.nullEnd {\\n  background: linear-gradient(to right, currentColor, rgba(28, 28, 28, 0.5));\\n}\\n.dark br-weekly-scheduler br-multi-slider .slot span {\\n  color: #fff;\\n  display: block;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n}\\n.dark br-weekly-scheduler .labels {\\n  border-right: 1px solid #777;\\n}\\n.dark br-weekly-scheduler .striped > div:nth-child(even) {\\n  background-color: #333;\\n}\\n.dark br-weekly-scheduler .srow {\\n  border-bottom: 1px solid #777;\\n}\\n.dark br-weekly-scheduler .timestamps div {\\n  border-width: 2px;\\n}\\n.dark br-weekly-scheduler .timestamps div:hover {\\n  background-color: #333;\\n}\\nbr-weekly-scheduler .fullWidth {\\n  width: 100%;\\n}\\nbr-weekly-scheduler .labels {\\n  display: block;\\n  float: left;\\n  text-align: center;\\n}\\nbr-weekly-scheduler .labels .dummy {\\n  height: 15px;\\n}\\nbr-weekly-scheduler .labels .srow {\\n  padding: 0 5px;\\n}\\nbr-weekly-scheduler br-schedule-area-container {\\n  display: block;\\n  overflow-x: auto;\\n  /** Practical effect of \\\"start zoomed if the screen is below this width\\\" */\\n}\\nbr-weekly-scheduler br-schedule-area-container .schedule-area {\\n  min-width: 600px;\\n}\\nbr-weekly-scheduler .srow {\\n  position: relative;\\n  height: 28px;\\n  line-height: 28px;\\n}\\nbr-weekly-scheduler .srow.buttons {\\n  height: auto;\\n}\\nbr-weekly-scheduler .srow.explanations {\\n  padding-left: 5px;\\n}\\nbr-weekly-scheduler .srow.explanations.violation {\\n  color: red;\\n}\\nbr-weekly-scheduler .calendar {\\n  display: table;\\n  table-layout: fixed;\\n  position: relative;\\n  width: 100%;\\n}\\nbr-weekly-scheduler .timestamps {\\n  display: table;\\n  font-size: 0.6em;\\n  font-weight: bold;\\n  line-height: 15px;\\n  height: 15px;\\n  table-layout: fixed;\\n  text-transform: uppercase;\\n  width: 100%;\\n}\\nbr-weekly-scheduler .timestamps div {\\n  overflow: hidden;\\n  padding-left: 2px;\\n  text-overflow: clip;\\n}\\nbr-weekly-scheduler .timestamps div:hover {\\n  cursor: pointer;\\n}\\nbr-hourly-grid {\\n  display: table-row;\\n}\\nbr-hourly-grid div {\\n  box-sizing: border-box;\\n  display: table-cell;\\n  height: 100%;\\n}\\nbr-hourly-grid .interval {\\n  display: block;\\n  float: left;\\n}\\nbr-multi-slider {\\n  cursor: crosshair;\\n  height: 100%;\\n  top: 0;\\n  position: absolute;\\n  width: 100%;\\n}\\nbr-multi-slider .ghost-wrapper {\\n  width: 100%;\\n  height: 100%;\\n}\\nbr-multi-slider .slot {\\n  font-family: monospace;\\n  font-size: x-small;\\n  position: absolute;\\n  top: 5px;\\n  bottom: 5px;\\n  border-radius: 3px;\\n  text-align: center;\\n  white-space: nowrap;\\n  line-height: 18px;\\n}\\nbr-multi-slider .slot.nullEnd {\\n  text-align: left;\\n}\\nbr-multi-slider .slot .slotWrapper {\\n  display: flex;\\n  height: 100%;\\n}\\nbr-multi-slider .slot .slotWrapper .middle {\\n  cursor: all-scroll;\\n  display: inline-block;\\n  overflow: hidden;\\n  padding: 0 4px;\\n}\\nbr-multi-slider br-ghost-slot {\\n  background: #5ab56a;\\n  color: #5ab56a;\\n  opacity: 0.6;\\n  cursor: pointer;\\n  user-select: none;\\n}\\nbr-multi-slider br-ghost-slot span {\\n  color: #fff;\\n}\\nbr-multi-slider br-time-range {\\n  display: block;\\n  width: 100%;\\n}\\nbr-multi-slider br-weekly-slot {\\n  /**\\n     * We want to set the COLOR on any item we want to have a custom background color for.\\n     * This is because the gradient backgrounds for allowNulls rely on currentColor.\\n     * The text color within is set using a more specific selector\\n     */\\n  background: #2e81e1;\\n  color: #2e81e1;\\n  user-select: none;\\n}\\nbr-multi-slider br-weekly-slot.disable {\\n  cursor: not-allowed;\\n  color: #666;\\n  background: #c0c0c0;\\n}\\nbr-multi-slider br-weekly-slot.pending {\\n  background-color: #c81919;\\n}\\nbr-multi-slider br-weekly-slot .handle {\\n  display: inline-block;\\n  flex-grow: 1;\\n}\\nbr-multi-slider br-weekly-slot .handle.left,\\nbr-multi-slider br-weekly-slot .handle.right {\\n  cursor: e-resize;\\n  min-width: 4px;\\n  height: 100%;\\n}\\nbr-multi-slider br-weekly-slot.disable .handle {\\n  cursor: not-allowed;\\n}\\nbr-multi-slider br-weekly-slot .handle.left:hover,\\nbr-multi-slider br-weekly-slot .handle.right:hover {\\n  background-color: #000;\\n  opacity: 0.3;\\n}\\nbr-multi-slider br-weekly-slot .handle.left {\\n  float: left;\\n}\\nbr-multi-slider br-weekly-slot .handle.right {\\n  float: right;\\n}\\nbr-multi-slider br-weekly-slot.active {\\n  font-weight: bolder;\\n  z-index: 10;\\n}\\n\", \"\"]);\n","import * as angular from 'angular';\r\nimport { AdapterService } from './AdapterService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.adapter', [])\r\n    .service(AdapterService.$name, AdapterService)\r\n    .name;\r\n","import { GroupService } from '../group-by/GroupService';\r\nimport { IWeeklySchedulerAdapter } from '../adapter/IWeeklySchedulerAdapter';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { WeeklySchedulerItemFactory } from '../weekly-scheduler-item/WeeklySchedulerItemFactory';\r\n\r\n/** @internal */\r\nexport class AdapterService {\r\n    static $name = 'brWeeklySchedulerAdapterService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerGroupService',\r\n        'brWeeklySchedulerItemFactory'\r\n    ];\r\n\r\n    private constructor(\r\n        private groupService: GroupService,\r\n        private itemFactory: WeeklySchedulerItemFactory\r\n    ) {\r\n    }\r\n\r\n    getItemsFromAdapter(config: IWeeklySchedulerConfig<any>, adapter: IWeeklySchedulerAdapter<any, any>) {\r\n        let result = [];\r\n\r\n        if (adapter) {\r\n          let schedules = adapter.initialData.map(data => adapter.customModelToWeeklySchedulerRange(data));\r\n          let groupedSchedules = this.groupService.groupSchedules(schedules);\r\n    \r\n          for (let key in groupedSchedules) {\r\n            let item = this.itemFactory.createItem(config, parseInt(key, 10), groupedSchedules[key]);\r\n    \r\n            result.push(item);\r\n          }\r\n        }\r\n    \r\n        return result;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { ConfigurationService } from './ConfigurationService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.configuration', [])\r\n    .service(ConfigurationService.$name, ConfigurationService)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { IWeeklySchedulerOptions } from '../weekly-scheduler-config/IWeeklySchedulerOptions';\r\nimport { TimeConstantsService } from '../time/TimeConstantsService';\r\n\r\n/** @internal */\r\nexport class ConfigurationService {\r\n    static $name = 'brWeeklySchedulerConfigurationService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerTimeConstantsService'\r\n    ];\r\n\r\n    private constructor(\r\n        private timeConstants: TimeConstantsService\r\n    ) {\r\n    }\r\n\r\n    public getConfiguration(options: IWeeklySchedulerOptions<any>) {\r\n        var interval = options.interval || 900; // seconds\r\n        var intervalCount = this.timeConstants.SECONDS_IN_DAY / interval;\r\n\r\n        const defaultOptions = this.getDefaultOptions();\r\n\r\n        var userOptions = angular.merge(defaultOptions, options);\r\n\r\n        var result = angular.extend(userOptions, {\r\n            interval: interval,\r\n            maxValue: this.timeConstants.SECONDS_IN_DAY,\r\n            hourCount: this.timeConstants.HOURS_IN_DAY,\r\n            intervalCount: intervalCount,\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    private getDefaultOptions(): IWeeklySchedulerOptions<any> {\r\n        return {\r\n            createItem: (day, schedules) => { return { day: day, schedules: schedules } },\r\n            monoSchedule: false,\r\n            onChange: () => angular.noop(),\r\n            onRemove: () => angular.noop(),\r\n            restrictionExplanations: {\r\n                maxTimeSlot: (value) => `Max time slot length: ${value}`,\r\n                minimumSeparation: (value) => `Slots must be at least ${value} apart!`,\r\n                fullCalendar: 'For this calendar, every day must be completely full of schedules.',\r\n                monoSchedule: 'This calendar may only have one time slot per day',\r\n                nullEnds: 'Items in this calendar do not have end times. Scheduled events begin at the start time and end when they are finished.',\r\n                scheduleCount: (options) => {\r\n                    let pluralizedSlot = 'slot' + (options.count === 1 ? '' : 's');\r\n\r\n                    if (options.exact) {\r\n                        return `This calendar must have exactly ${options.count} ${pluralizedSlot} per day`;\r\n                    } else {\r\n                        return `This calendar may only have a maximum of ${options.count} ${pluralizedSlot} per day`;\r\n                    }\r\n                }\r\n            },\r\n            scheduleCountOptions: {\r\n                count: null,\r\n                exact: false\r\n            }\r\n        };\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { ConflictingOptionsService } from './ConflictingOptionsService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.conflictingOptions', [])\r\n    .service(ConflictingOptionsService.$name, ConflictingOptionsService)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { IWeeklySchedulerOptions } from '../weekly-scheduler-config/IWeeklySchedulerOptions';\r\n\r\n/** @internal */\r\nexport class ConflictingOptionsService {\r\n    static $name = 'brWeeklySchedulerConflictingOptionsService';\r\n\r\n    public getConflictingOptions(options: IWeeklySchedulerOptions<any>) {\r\n        if (options.nullEnds && options.scheduleCountOptions && options.scheduleCountOptions.count > 1) {\r\n            return `A nullEnds calendar has a maximum scheduleCount of 1`;\r\n        }\r\n\r\n        if (options.fullCalendar && options.fillEmptyWithDefault) {\r\n            return `Options 'fullCalendar' & 'fillEmptyWithDefault' are mutually exclusive.`;\r\n        }\r\n\r\n        if (options.fillEmptyWithDefault && !angular.isDefined(options.defaultValue)) {\r\n            return `If using option 'fillEmptyWithDefault', you must also provide 'defaultValue.'`;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { DragService } from './DragService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.drag', [])\r\n    .service(DragService.$name, DragService)\r\n    .name;\r\n","import { EndAdjusterService } from '../end-adjuster/EndAdjusterService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\nimport { WeeklySchedulerRangeFactory } from '../weekly-scheduler-range/WeeklySchedulerRangeFactory';\r\n\r\n/** @internal */\r\nexport class DragService {\r\n    static $name = 'brWeeklySchedulerDragService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerEndAdjusterService',\r\n        'brWeeklySchedulerNullEndWidth',\r\n        'brWeeklySchedulerRangeFactory'\r\n    ];\r\n\r\n    private constructor(\r\n        private endAdjusterService: EndAdjusterService,\r\n        private nullEndWidth: number,\r\n        private rangeFactory: WeeklySchedulerRangeFactory\r\n    ) {\r\n    }\r\n\r\n    public getDragRangeFromSchedule(config: IWeeklySchedulerConfig<any>, schedule: WeeklySchedulerRange<any>) {\r\n        return this.rangeFactory.createRange(config, {\r\n            day: schedule.day,\r\n            start: schedule.start,\r\n            end: config.nullEnds ?\r\n                this.endAdjusterService.adjustEndForView(config, schedule.start + this.nullEndWidth) :\r\n                this.endAdjusterService.adjustEndForView(config, schedule.end),\r\n            value: schedule.value\r\n        });\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { ElementOffsetService } from './ElementOffsetService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.elementOffset', [])\r\n    .service(ElementOffsetService.$name, ElementOffsetService)\r\n    .name;\r\n","/**\r\n * This helps reduce code duplication\r\n * This is used as a substitute for jQuery to keep dependencies minimal\r\n */\r\n\r\n/** @internal */\r\nexport class ElementOffsetService {\r\n    static $name = 'brWeeklySchedulerElementOffsetService';\r\n\r\n    public left($element: angular.IAugmentedJQuery) {\r\n        return $element[0].getBoundingClientRect().left;\r\n    }\r\n\r\n    public right($element: angular.IAugmentedJQuery) {\r\n        return $element[0].getBoundingClientRect().right;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { EndAdjusterService } from './EndAdjusterService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.endAdjuster', [])\r\n    .service(EndAdjusterService.$name, EndAdjusterService)\r\n    .name;\r\n","import { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\n\r\n/** @internal */\r\nexport class EndAdjusterService {\r\n    static $name = 'brWeeklySchedulerEndAdjusterService';\r\n\r\n    public adjustEndForModel(config: IWeeklySchedulerConfig<any>, end: number) {\r\n        if (end === config.maxValue) {\r\n            return 0;\r\n        }\r\n\r\n        return end;\r\n    }\r\n\r\n    public adjustEndForView(config: IWeeklySchedulerConfig<any>, end: number) {\r\n        if (end === 0) {\r\n            return config.maxValue;\r\n        }\r\n\r\n        return end;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { FillEmptyWithDefaultService } from './FillEmptyWithDefaultService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.fillEmptyWithDefault', [])\r\n    .service(FillEmptyWithDefaultService.$name, FillEmptyWithDefaultService)\r\n    .name;\r\n","import { EndAdjusterService } from '../end-adjuster/EndAdjusterService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\nimport { WeeklySchedulerRangeFactory } from '../weekly-scheduler-range/WeeklySchedulerRangeFactory';\r\n\r\n/** When using the 'fillEmptyWithDefault' option, this service will be used to construct the correct calendar for server submission */\r\n/** @internal */\r\nexport class FillEmptyWithDefaultService {\r\n    static $name = 'brWeeklySchedulerFillEmptyWithDefaultService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerEndAdjusterService',\r\n        'brWeeklySchedulerRangeFactory'\r\n    ];\r\n\r\n    private constructor(\r\n        private endAdjusterService: EndAdjusterService,\r\n        private rangeFactory: WeeklySchedulerRangeFactory\r\n    ) {\r\n    }\r\n\r\n    fill(item: WeeklySchedulerItem<any>, config: IWeeklySchedulerConfig<any>): WeeklySchedulerRange<any>[] {\r\n        let schedules = item.schedules;\r\n\r\n        if (!schedules.length) {\r\n            return [this.getEmptySchedule(item, config)];\r\n        }\r\n\r\n        return this.getFilledSchedules(schedules, config);\r\n    }\r\n\r\n    private getEmptySchedule(item: WeeklySchedulerItem<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return this.rangeFactory.createRange(config, {\r\n            day: item.day,\r\n            start: 0,\r\n            end: this.endAdjusterService.adjustEndForModel(config, config.maxValue),\r\n            value: config.defaultValue\r\n        });\r\n    }\r\n\r\n    private getEndSchedule(lastSchedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return this.rangeFactory.createRange(config, {\r\n            day: lastSchedule.day,\r\n            start: lastSchedule.end,\r\n            end: this.endAdjusterService.adjustEndForModel(config, config.maxValue),\r\n            value: config.defaultValue\r\n        })\r\n    }\r\n\r\n    private getStartSchedule(firstSchedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return this.rangeFactory.createRange(config, {\r\n            day: firstSchedule.day,\r\n            start: 0,\r\n            end: firstSchedule.start,\r\n            value: config.defaultValue\r\n        });\r\n    }\r\n\r\n    private getFilledSchedulesForSingleSchedule(schedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        if (this.shouldFillNullEnd(schedule, config)) {\r\n            schedule.end = this.getNullEndValue(schedule, config);\r\n        }\r\n\r\n        let schedules = [schedule];\r\n\r\n        if (!this.scheduleTouchesStart(schedule, config)) {\r\n            schedules.push(this.getStartSchedule(schedule, config));\r\n        }\r\n\r\n        if (!this.scheduleTouchesEnd(schedule, config)) {\r\n            schedules.push(this.getEndSchedule(schedule, config));\r\n        }\r\n\r\n        return this.getSortedSchedules(schedules);\r\n    }\r\n\r\n    private getFilledSchedules(schedules: WeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>) {\r\n        schedules = this.getSortedSchedules(schedules);\r\n\r\n        if (schedules.length === 1) {\r\n            return this.getFilledSchedulesForSingleSchedule(schedules[0], config);\r\n        }\r\n\r\n        let len = schedules.length - 1;\r\n        \r\n        // 2 at a time\r\n        for (let i = 0; i < len; i++) {\r\n            let currentSchedule = schedules[i];\r\n            let nextSchedule = schedules[i + 1];\r\n\r\n            let isFirstLoop = i == 0;\r\n\r\n            if (isFirstLoop && !this.scheduleTouchesStart(currentSchedule, config)) {\r\n                let startSchedule = this.getStartSchedule(currentSchedule, config);\r\n\r\n                schedules.push(startSchedule);\r\n            }\r\n\r\n            if (!this.schedulesTouch(currentSchedule, nextSchedule)) {\r\n                let newSchedule = this.getNewSchedule(currentSchedule, nextSchedule, config);\r\n\r\n                schedules.push(newSchedule);\r\n            }\r\n\r\n            let isLastLoop = i == len - 1;\r\n\r\n            if (isLastLoop && !this.scheduleTouchesEnd(nextSchedule, config)) {\r\n                let endSchedule = this.getEndSchedule(nextSchedule, config);\r\n\r\n                schedules.push(endSchedule);\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this.getSortedSchedules(schedules);\r\n    }\r\n\r\n    private getNewSchedule(currentSchedule: WeeklySchedulerRange<any>, nextSchedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return this.rangeFactory.createRange(config, {\r\n            day: currentSchedule.day,\r\n            start: currentSchedule.end,\r\n            end: nextSchedule.start,\r\n            value: config.defaultValue\r\n        });\r\n    }\r\n\r\n    private getNullEndValue(schedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return schedule.start + config.fillNullEnds;\r\n    }\r\n\r\n    private getSortedSchedules(schedules: WeeklySchedulerRange<any>[]) {\r\n        return schedules.sort((a, b) => a.start - b.start);\r\n    }\r\n\r\n    private schedulesTouch(earlierSchedule: WeeklySchedulerRange<any>, laterSchedule: WeeklySchedulerRange<any>) {\r\n        return earlierSchedule.end === laterSchedule.start;\r\n    }\r\n\r\n    private scheduleTouchesStart(schedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return schedule.start === 0;\r\n    }\r\n    \r\n    private scheduleTouchesEnd(schedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return schedule.end === this.endAdjusterService.adjustEndForModel(config, config.maxValue);\r\n    }\r\n\r\n    private shouldFillNullEnd(schedule: WeeklySchedulerRange<any>, config: IWeeklySchedulerConfig<any>) {\r\n        return schedule.end === null && config.nullEnds && config.fillNullEnds;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { FullCalendarDirective } from './FullCalendarDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.fullCalendar', [])\r\n    .directive(FullCalendarDirective.$name, FullCalendarDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { FullCalendarValidatorService } from '../schedule-validator/FullCalendarValidatorService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class FullCalendarDirective implements angular.IDirective {\r\n    static $name = 'brFullCalendar';\r\n\r\n    constructor(\r\n        private validator: FullCalendarValidatorService\r\n    ) {\r\n    }\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        if (attrs.brFullCalendar) {\r\n            ngModelCtrl.$validators[this.validator.error] = (modelValue: WeeklySchedulerItem<any>) => {\r\n                return this.validator.validate(modelValue.schedules, modelValue.config);\r\n            };\r\n        }\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = (validator) => {\r\n            return new FullCalendarDirective(validator);\r\n        };\r\n\r\n        directive.$inject = ['brWeeklySchedulerFullCalendarValidatorService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { GhostSlotComponent, GhostSlotController } from './ghost-slot';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.ghostSlot', [])\r\n    .component(GhostSlotComponent.$name, new GhostSlotComponent())\r\n    .controller(GhostSlotController.$name, GhostSlotController)\r\n    .name;\r\n","import { MultiSliderController } from '../multislider/multislider';\r\n\r\n/** @internal */\r\nexport class GhostSlotController implements angular.IComponentController {\r\n    static $name = 'brGhostSlotController';\r\n    static $controllerAs = 'ghostSlotCtrl';\r\n\r\n    static $inject = [\r\n        '$element'\r\n    ];\r\n\r\n    constructor(\r\n        private $element: angular.IAugmentedJQuery\r\n    ) {\r\n    }\r\n\r\n    private multiSliderCtrl: MultiSliderController;\r\n}\r\n\r\n/** @internal */\r\nexport class GhostSlotComponent implements angular.IComponentOptions {\r\n    static $name = 'brGhostSlot';\r\n\r\n    controller = GhostSlotController.$name;\r\n    controllerAs = GhostSlotController.$controllerAs;\r\n\r\n    require = {\r\n        multiSliderCtrl: '^brMultiSlider'\r\n    };\r\n\r\n    template = require('./ghost-slot.html');\r\n\r\n    transclude = true;\r\n}\r\n","module.exports = \"<ng-transclude class=\\\"fullWidth\\\"></ng-transclude>\";","import * as angular from 'angular';\r\nimport { GroupService } from './GroupService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.groupBy', [])\r\n    .service(GroupService.$name, GroupService)\r\n    .name;\r\n","import { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\n\r\n/**\r\n * We should be able to convert the schedules beforehand, pass just the schedules in and have this package build the items\r\n * This helps reduce code duplication in clients.\r\n * This is used as a substitute for lodash.groupBy to keep the footprint small \r\n */\r\n\r\n/** @internal */\r\nexport class GroupService {\r\n    static $name = 'brWeeklySchedulerGroupService';\r\n\r\n    groupSchedules(schedules: IWeeklySchedulerRange<any>[]): { [key: number]: IWeeklySchedulerRange<any>[] } {\r\n        let seed: { [key: number]: IWeeklySchedulerRange<any>[] } = {};\r\n\r\n        let result = schedules.reduce((reducer, currentSchedule, index, array) => {\r\n            let key = currentSchedule.day;\r\n\r\n            if (!reducer[key]) {\r\n                reducer[key] = [];\r\n            }\r\n\r\n            reducer[key].push(currentSchedule);\r\n\r\n            return reducer;\r\n        }, seed);\r\n\r\n        return result;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { HandleDirective } from './HandleDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.handle', [])\r\n    .directive(HandleDirective.$name, HandleDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { MouseTrackerService } from '../mouse-tracker/MouseTrackerService';\r\nimport { TouchService } from '../touch/TouchService';\r\n\r\n/** @internal */\r\nexport class HandleDirective implements angular.IDirective {\r\n  static $name = 'brHandle';\r\n  restrict = 'A';\r\n\r\n  scope = {\r\n    ondrag: '&',\r\n    ondragstop: '&',\r\n    ondragstart: '&',\r\n    immediate: '<'\r\n  };\r\n\r\n  link = (scope, element: angular.IAugmentedJQuery) => {\r\n    var $document = this.$document;\r\n    var mouseTrackerService = this.mouseTrackerService;\r\n    var touchService = this.touchService;\r\n    var x = 0;\r\n\r\n    let mousedownEvent: string = 'mousedown touchstart';\r\n    let mousemoveEvent: string = 'mousemove touchmove';\r\n    let mouseupEvent: string = 'mouseup touchend';\r\n\r\n    element.on(mousedownEvent, mousedown);\r\n\r\n    function mousedown(event) {\r\n      x = getPageX(event);\r\n\r\n      // Prevent default dragging of selected content\r\n      event.preventDefault();\r\n\r\n      // Prevent multiple handlers from being fired if they are nested (only the one you directly interacted with should fire)\r\n      event.stopPropagation();\r\n\r\n      startDrag();\r\n    }\r\n\r\n    function fakeMousedown() {\r\n      x = mouseTrackerService.getMousePosition().x;\r\n\r\n      startDrag();\r\n    }\r\n\r\n    function getPageX(event) {\r\n      return event.pageX || touchService.getPageX(event);\r\n    }\r\n\r\n    function mousemove(event) {\r\n      let pageX = getPageX(event);\r\n      var delta = pageX - x;\r\n\r\n      if (angular.isFunction(scope.ondrag)) {\r\n        scope.$apply(scope.ondrag({ delta: delta }));\r\n      }\r\n    }\r\n\r\n    function mouseup() {\r\n      $document.unbind(mousemoveEvent, mousemove);\r\n      $document.unbind(mouseupEvent, mouseup);\r\n\r\n      if (angular.isFunction(scope.ondragstop)) {\r\n        scope.$apply(scope.ondragstop());\r\n      }\r\n    }\r\n\r\n    function startDrag() {\r\n      $document.on(mousemoveEvent, mousemove);\r\n      $document.on(mouseupEvent, mouseup);\r\n\r\n      if (angular.isFunction(scope.ondragstart)) {\r\n        scope.$applyAsync(scope.ondragstart());\r\n      }\r\n    }\r\n\r\n    if (scope.immediate) {\r\n      fakeMousedown();\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private $document: angular.IDocumentService,\r\n    private mouseTrackerService: MouseTrackerService,\r\n    private touchService: TouchService\r\n  ) {\r\n  }\r\n\r\n  static Factory() {\r\n    let directive = ($document, mouseTrackerService, touchService) => new HandleDirective($document, mouseTrackerService, touchService);\r\n\r\n    directive.$inject = ['$document', 'brWeeklySchedulerMouseTrackerService', 'brWeeklySchedulerTouchService'];\r\n\r\n    return directive;\r\n  }\r\n}\r\n","import * as angular from 'angular';\r\nimport { HourlyGridDirective } from './HourlyGridDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.hourlyGrid', [])\r\n    .directive(HourlyGridDirective.$name, HourlyGridDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { WeeklySchedulerController } from '../weekly-scheduler/weekly-scheduler';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { TimeConstantsService } from '../time/TimeConstantsService';\r\nimport { WeeklySchedulerEvents } from '../weekly-scheduler-config/WeeklySchedulerEvents';\r\n\r\n/** @internal */\r\nexport class HourlyGridDirective implements angular.IDirective {\r\n    static $name = 'brHourlyGrid';\r\n\r\n    restrict = 'E';\r\n    require = '^brWeeklyScheduler';\r\n\r\n    private GRID_TEMPLATE = angular.element('<div class=\"grid-item\"></div>');\r\n\r\n    private handleClickEvent(child, hourCount, idx, scope) {\r\n        child.bind('click', function () {\r\n            scope.$apply(() => {\r\n                scope.$emit(WeeklySchedulerEvents.CLICK_ON_A_CELL, {\r\n                    nbElements: hourCount,\r\n                    idx: idx\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    private doGrid(scope, element, attrs, config: IWeeklySchedulerConfig<any>) {\r\n        // Calculate hour width distribution\r\n        var tickcount = config.hourCount;\r\n        var gridItemEl = this.GRID_TEMPLATE.clone();\r\n  \r\n        // Clean element\r\n        element.empty();\r\n\r\n        // Stripe it by hour\r\n        element.addClass('striped');\r\n\r\n        for (let i = 0; i < tickcount; i++) {\r\n          var child = gridItemEl.clone();\r\n\r\n          if (angular.isUndefined(attrs.noText)) {\r\n            this.handleClickEvent(child, tickcount, i, scope);\r\n\r\n            let currentHour = i % 12;\r\n            let meridiem = i >= 12 ? 'p' : 'a';\r\n\r\n            child.text(`${currentHour || '12'}${meridiem}`);\r\n          } else {\r\n            let numIntervalsInTick = this.timeConstants.SECONDS_IN_HOUR / config.interval;\r\n            let intervalPercentage = 100 / numIntervalsInTick;\r\n\r\n            for (let j = 0; j < numIntervalsInTick; j++) {\r\n                let grandChild = this.GRID_TEMPLATE.clone();\r\n                grandChild.attr('rel', ((i * numIntervalsInTick) + j) * config.interval);\r\n                grandChild.addClass('interval');\r\n                grandChild.css('width', intervalPercentage + '%');\r\n                child.append(grandChild);\r\n            }\r\n          }\r\n\r\n          element.append(child);\r\n        }\r\n    }\r\n\r\n    link = (scope, element, attrs, schedulerCtrl: WeeklySchedulerController) => {\r\n        if (schedulerCtrl.config) {\r\n            this.doGrid(scope, element, attrs, schedulerCtrl.config);\r\n        }\r\n    }\r\n\r\n    constructor(\r\n        private timeConstants: TimeConstantsService\r\n    ) {\r\n    }\r\n\r\n    static Factory() {\r\n        let directive = (timeConstants) => new HourlyGridDirective(timeConstants);\r\n\r\n        directive.$inject = ['brWeeklySchedulerTimeConstantsService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { LastGhostDayService } from './LastGhostDayService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.lastGhostDay', [])\r\n    .service(LastGhostDayService.$name, LastGhostDayService)\r\n    .name;\r\n","import { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class LastGhostDayService {\r\n    static $name = 'brWeeklySchedulerLastGhostDayService';\r\n\r\n    /**\r\n     * When dragging ghosts across multiple days, if the user moves the mouse pointer out of one extreme and back into the last slot that rendered a ghost,\r\n     * We should remove the ghost from that extreme. This will help grab the correct day\r\n     */\r\n    public getLastGhostDay(items: WeeklySchedulerItem<any>[]) {\r\n        let originIndex = this.getOriginIndex(items);\r\n        let renderedGhostIndices = this.getRenderedGhostIndices(items);\r\n\r\n        // determine if the other $renderGhost items are above or below the $isGhostOrigin item\r\n        let above = renderedGhostIndices.every(i => i <= originIndex);\r\n\r\n        // take first item for above or last item for below\r\n        let lastGhostDayIndex = above ? 0 : renderedGhostIndices.length - 1;\r\n\r\n        return renderedGhostIndices[lastGhostDayIndex];\r\n    }\r\n\r\n    /** Get the index of the $isGhostOrigin item */\r\n    private getOriginIndex(items: WeeklySchedulerItem<any>[]) {\r\n        let originIndex;\r\n        let len = items.length;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let currentItem = items[i];\r\n\r\n            if (currentItem.$isGhostOrigin) {\r\n                originIndex = i;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return originIndex;\r\n    }\r\n\r\n    /** Get all of the item indices that currently have ghosts rendered */\r\n    private getRenderedGhostIndices(items: WeeklySchedulerItem<any>[]) {\r\n        let renderedGhostIndices = [];\r\n        let len = items.length;\r\n\r\n        for (let i = 0; i < len; i++) {\r\n            let currentItem = items[i];\r\n\r\n            if (currentItem.$renderGhost) {\r\n                renderedGhostIndices.push(i);\r\n            }\r\n        }\r\n\r\n        return renderedGhostIndices;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { MaxTimeSlotDirective } from './MaxTimeSlotDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.maxTimeSlot', [])\r\n    .directive(MaxTimeSlotDirective.$name, MaxTimeSlotDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { MaxTimeSlotValidatorService } from '../schedule-validator/MaxTimeSlotValidatorService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class MaxTimeSlotDirective implements angular.IDirective {\r\n    static $name = 'brMaxTimeSlot';\r\n\r\n    constructor(\r\n        private validator: MaxTimeSlotValidatorService\r\n    ) {\r\n    }\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        if (attrs.brMaxTimeSlot) {\r\n            ngModelCtrl.$validators[this.validator.error] = (modelValue: WeeklySchedulerItem<any>) => {\r\n                return this.validator.validate(modelValue.schedules, modelValue.config);\r\n            };\r\n        }\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = (validator) => {\r\n            return new MaxTimeSlotDirective(validator);\r\n        };\r\n\r\n        directive.$inject = ['brWeeklySchedulerMaxTimeSlotValidatorService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { MinimumSeparationDirective } from './MinimumSeparationDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.minimumSeparation', [])\r\n    .directive(MinimumSeparationDirective.$name, MinimumSeparationDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { MinimumSeparationValidatorService } from '../schedule-validator/MinimumSeparationValidatorService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class MinimumSeparationDirective implements angular.IDirective {\r\n    static $name = 'brMinimumSeparation';\r\n\r\n    constructor(\r\n        private validator: MinimumSeparationValidatorService\r\n    ) {\r\n    }\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        if (attrs.brMinimumSeparation) {\r\n            ngModelCtrl.$validators[this.validator.error] = (modelValue: WeeklySchedulerItem<any>) => {\r\n                return this.validator.validate(modelValue.schedules, modelValue.config);\r\n            };\r\n        }\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = (validator) => {\r\n            return new MinimumSeparationDirective(validator);\r\n        };\r\n\r\n        directive.$inject = ['brWeeklySchedulerMinimumSeparationValidatorService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { MissingDaysService } from './MissingDaysService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.missingDays', [])\r\n    .service(MissingDaysService.$name, MissingDaysService)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { DayMap } from '../weekly-scheduler-config/DayMap';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\nimport { WeeklySchedulerItemFactory } from '../weekly-scheduler-item/WeeklySchedulerItemFactory';\r\n\r\n/** @internal */\r\nexport class MissingDaysService {\r\n    static $name = 'brWeeklySchedulerMissingDaysService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerDayMap',\r\n        'brWeeklySchedulerItemFactory'\r\n    ];\r\n\r\n    private constructor(\r\n        private dayMap: DayMap,\r\n        private itemFactory: WeeklySchedulerItemFactory\r\n    ) {\r\n    }\r\n\r\n    /**\r\n     * The scheduler should always show all days, even if it was not passed any schedules for that day\r\n     */\r\n    public fillItems(config: IWeeklySchedulerConfig<any>, items: WeeklySchedulerItem<any>[]) {\r\n        let result: WeeklySchedulerItem<any>[] = [];\r\n\r\n        angular.forEach(this.dayMap, (day: string, stringKey: string) => {\r\n          let key = parseInt(stringKey, 10);\r\n          let filteredItems = items.filter(item => item.day === key);\r\n          let item: WeeklySchedulerItem<any> = filteredItems.length ? filteredItems[0] : null;\r\n    \r\n          if (!item) {\r\n            result.push(this.itemFactory.createItem(config, key, []));\r\n          } else {\r\n            // If the item DID exist just set the label\r\n            item.label = day;\r\n    \r\n            result.push(item);\r\n          }\r\n        });\r\n    \r\n        return angular.copy(result).sort((a, b) => a.day - b.day);\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { MonoScheduleDirective } from './MonoScheduleDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.monoSchedule', [])\r\n    .directive(MonoScheduleDirective.$name, MonoScheduleDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { MonoScheduleValidatorService } from '../schedule-validator/MonoScheduleValidatorService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class MonoScheduleDirective implements angular.IDirective {\r\n    static $name = 'brMonoSchedule';\r\n\r\n    constructor(\r\n        private validator: MonoScheduleValidatorService\r\n    ) {\r\n    }\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        if (attrs.brMonoSchedule) {\r\n            ngModelCtrl.$validators[this.validator.error] = (modelValue: WeeklySchedulerItem<any>) => {\r\n                return this.validator.validate(modelValue.schedules, modelValue.config);\r\n            };\r\n        }\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = (validator) => {\r\n            return new MonoScheduleDirective(validator);\r\n        };\r\n\r\n        directive.$inject = ['brWeeklySchedulerMonoScheduleValidatorService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { MouseTrackerService } from './MouseTrackerService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.mouseTracker', [])\r\n    .service(MouseTrackerService.$name, MouseTrackerService)\r\n    .run([MouseTrackerService.$name, (mouseTrackerService: MouseTrackerService) => {\r\n        mouseTrackerService.initialize();\r\n    }])\r\n    .name;\r\n","import { IPoint } from '../point/IPoint';\r\n\r\n/** @internal */\r\nexport class MouseTrackerService {\r\n    static $name = 'brWeeklySchedulerMouseTrackerService';\r\n\r\n    static $inject = ['$document'];\r\n\r\n    private constructor(\r\n        private $document: angular.IDocumentService\r\n    ) {\r\n    }\r\n\r\n    private mousePosition: IPoint;\r\n\r\n    public initialize() {\r\n        const eventName = 'mousemove touchmove';\r\n\r\n        let event = this.setMousePosition.bind(this);\r\n\r\n        this.$document.unbind(eventName, event);\r\n        this.$document.on(eventName, event);\r\n    }\r\n\r\n    public getMousePosition() {\r\n        return this.mousePosition;\r\n    }\r\n\r\n    private setMousePosition(event) {\r\n        this.mousePosition = { x: event.pageX, y: event.pageY };\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { MultiSliderComponent, MultiSliderController } from './multislider';\r\n\r\nexport default\r\n    angular.module('rr.weeklyScheduler.multiSlider', [])\r\n    .component(MultiSliderComponent.$name, new MultiSliderComponent())\r\n    .controller(MultiSliderController.$name, MultiSliderController)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { EndAdjusterService } from '../end-adjuster/EndAdjusterService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\nimport { WeeklySchedulerRangeFactory } from '../weekly-scheduler-range/WeeklySchedulerRangeFactory';\r\nimport { ElementOffsetService } from '../element-offset/ElementOffsetService';\r\nimport { MouseTrackerService } from '../mouse-tracker/MouseTrackerService';\r\nimport { ValueNormalizationService } from '../value-normalization/ValueNormalizationService';\r\nimport { WeeklySchedulerEvents } from '../weekly-scheduler-config/WeeklySchedulerEvents';\r\n\r\n/** @internal */\r\nexport class MultiSliderController implements angular.IComponentController {\r\n  static $name = 'brMultiSliderController';\r\n  static $controllerAs = 'multiSliderCtrl';\r\n\r\n  static $inject = [\r\n    '$element',\r\n    '$q',\r\n    '$scope',\r\n    'brWeeklySchedulerElementOffsetService',\r\n    'brWeeklySchedulerEndAdjusterService',\r\n    'brWeeklySchedulerMouseTrackerService',\r\n    'brWeeklySchedulerNullEndWidth',\r\n    'brWeeklySchedulerRangeFactory',\r\n    'brWeeklySchedulerValueNormalizationService'\r\n  ];\r\n\r\n  constructor(\r\n    private $element: angular.IAugmentedJQuery,\r\n    private $q: angular.IQService,\r\n    private $scope: angular.IScope,\r\n    private elementOffsetService: ElementOffsetService,\r\n    private endAdjusterService: EndAdjusterService,\r\n    private mouseTrackerService: MouseTrackerService,\r\n    private nullEndWidth: number,\r\n    private rangeFactory: WeeklySchedulerRangeFactory,\r\n    private valueNormalizationService: ValueNormalizationService\r\n  ) {\r\n    this.element = this.$element[0];\r\n  }\r\n\r\n  private dragSchedule: WeeklySchedulerRange<any>;\r\n  private pendingSchedule: WeeklySchedulerRange<any>;\r\n\r\n  private startingGhostValues: { left: number, right: number };\r\n  private readonly ghostValues: { left: number, right: number };\r\n  private setGhostValues: (options: { ghostValues: { left: number, right: number } }) => void;\r\n\r\n  private ngModelCtrl: angular.INgModelController;\r\n  \r\n  public element: Element;\r\n  public config: IWeeklySchedulerConfig<any>;\r\n\r\n  private item: WeeklySchedulerItem<any>;\r\n\r\n  public $postLink() {\r\n    this.$element.on('mouseenter', () => {\r\n      this.onMouseEnter();\r\n    });\r\n\r\n    this.$element.on('mouseleave', () => {\r\n      this.onMouseLeave();\r\n    });\r\n\r\n    this.$element.on('mouseup', () => {\r\n       this.onMouseUp();\r\n    });\r\n\r\n    this.$scope.$on(WeeklySchedulerEvents.COMMIT_GHOST, (event: angular.IAngularEvent, ghostSchedule: WeeklySchedulerRange<any>) => {\r\n      if (this.item.$renderGhost) {\r\n        this.commitGhost(ghostSchedule);\r\n      }\r\n    });\r\n\r\n    this.$scope.$on(WeeklySchedulerEvents.REMOVE_GHOST, (event: angular.IAngularEvent, day: number) => {\r\n      if (!this.item.$isGhostOrigin && this.item.day === day) {\r\n        this.removeGhost();\r\n      }\r\n    });\r\n\r\n    this.$scope.$on(WeeklySchedulerEvents.REMOVE_ALL_GHOSTS, () => {\r\n      this.removeGhost();\r\n    });\r\n  }\r\n\r\n  private onMouseEnter() {\r\n    // If the cursor is moving BACK into an item that ALREADY has a ghost rendered, we'll want to remove the ghost from the item that was left\r\n    if (this.item.$renderGhost) {\r\n      this.$scope.$emit(WeeklySchedulerEvents.REMOVE_LAST_GHOST);\r\n    }\r\n\r\n    if (this.dragSchedule) {\r\n      this.addDragSchedule();\r\n    }\r\n\r\n    if (this.ghostValues && !this.item.$renderGhost) {\r\n      this.createGhost();\r\n    }\r\n  }\r\n\r\n  private onMouseLeave() {\r\n    if (this.dragSchedule) {\r\n      this.removeDragSchedule();\r\n    }\r\n  }\r\n\r\n  private onMouseUp() {\r\n    if (this.pendingSchedule) {\r\n      this.commitDragSchedule();\r\n    }\r\n  }\r\n\r\n  private addDragSchedule() {\r\n    this.dragSchedule.day = this.item.day;\r\n    this.pendingSchedule = this.item.addSchedule(this.dragSchedule);\r\n    this.pendingSchedule.$isActive = true;\r\n  }\r\n\r\n  private removeDragSchedule() {\r\n    this.item.removeSchedule(this.dragSchedule);\r\n    this.ngModelCtrl.$setDirty();\r\n    this.pendingSchedule = null;\r\n  }\r\n\r\n  private commitDragSchedule() {\r\n    this.pendingSchedule.$isActive = false;\r\n\r\n    this.ngModelCtrl.$setDirty();\r\n    this.item.mergeSchedule(this.pendingSchedule);\r\n    this.pendingSchedule = null;\r\n  }\r\n\r\n  private getScheduleForAdd(start: number, end: number) {\r\n    start = this.valueNormalizationService.normalizeValue(start, 0, end);\r\n    end = this.valueNormalizationService.normalizeValue(end, start, this.config.maxValue);\r\n\r\n    if (this.config.nullEnds) {\r\n      end = null;\r\n    }\r\n\r\n    let schedule = {\r\n      day: this.item.day,\r\n      start: start,\r\n      end: end,\r\n      value: this.config.defaultValue\r\n    };\r\n\r\n    return schedule;\r\n  }\r\n\r\n  private openEditorForAdd(schedule: IWeeklySchedulerRange<any>): angular.IPromise<IWeeklySchedulerRange<any>> {\r\n    if (this.item.canEdit()) {\r\n      return this.config.editSlot(schedule);\r\n    } else {\r\n      return this.$q.when(schedule);\r\n    }\r\n  }\r\n\r\n  /** Expand ghost while dragging in it */\r\n  public adjustGhost() {\r\n    let point = this.mouseTrackerService.getMousePosition();\r\n    let mouseValue: number = this.getValAtMousePosition(point.x);\r\n\r\n    let existingLeftValue: number = this.startingGhostValues.left;\r\n\r\n    let updatedLeftValue: number;\r\n    let updatedRightValue: number;\r\n    \r\n    if (mouseValue < existingLeftValue) { // user is dragging left\r\n      updatedLeftValue = mouseValue;\r\n      updatedRightValue = existingLeftValue;\r\n    } else { // user is dragging right\r\n      updatedLeftValue = existingLeftValue;\r\n      updatedRightValue = mouseValue;\r\n    }\r\n\r\n    let ghostValues = {\r\n      left: this.normalizeGhostValue(updatedLeftValue),\r\n      right: this.normalizeGhostValue(updatedRightValue)\r\n    };\r\n\r\n    this.setGhostValues({ \r\n      ghostValues: ghostValues\r\n    });\r\n  }\r\n  \r\n  /** Move ghost around while not dragging */\r\n  public positionGhost() {\r\n    let point = this.mouseTrackerService.getMousePosition();\r\n    let val = this.getValAtMousePosition(point.x);\r\n\r\n    this.startingGhostValues = {\r\n      left: val,\r\n      right: this.config.nullEnds ? val + this.nullEndWidth : val + this.config.interval\r\n    };\r\n\r\n    this.setGhostValues({\r\n      ghostValues: angular.copy(this.startingGhostValues)\r\n    });\r\n  }\r\n\r\n  public onGhostWrapperMouseDown() {\r\n    if (!this.item.editable) {\r\n      return;\r\n    }\r\n\r\n    this.item.$isGhostOrigin = true;\r\n    this.createGhost();\r\n  }\r\n\r\n  public onGhostWrapperMouseMove() {\r\n    // nullEnds calendars don't need to do anything because the size of the slot doesn't really matter\r\n    if (this.config.nullEnds) {\r\n      this.positionGhost();\r\n      return;\r\n    }\r\n\r\n    if (this.item.$renderGhost) {\r\n      this.adjustGhost();\r\n    }\r\n  }\r\n\r\n  public onGhostWrapperMouseUp() {\r\n    let ghostSchedule = this.getScheduleForAdd(this.ghostValues.left, this.ghostValues.right);\r\n\r\n    this.openEditorForAdd(ghostSchedule).then(editedGhostSchedule => {\r\n      this.$scope.$emit(WeeklySchedulerEvents.GHOST_DRAG_ENDED, editedGhostSchedule);\r\n    }).catch(() => {\r\n      this.$scope.$emit(WeeklySchedulerEvents.CANCEL_GHOST);\r\n    });\r\n  }\r\n\r\n  private createGhost() {\r\n    this.item.$renderGhost = true;\r\n    this.positionGhost();\r\n  }\r\n\r\n  private commitGhost(ghostSchedule: WeeklySchedulerRange<any>) {\r\n    if (this.item.canAddSchedule()) {\r\n      this.item.addScheduleAndMerge(ghostSchedule);\r\n      this.ngModelCtrl.$setDirty();\r\n      this.config.onChange();\r\n    }\r\n\r\n    this.removeGhost();\r\n  }\r\n\r\n  private getMousePosition(pageX: number) {\r\n    let elementOffsetX = this.elementOffsetService.left(this.$element);\r\n    let left = pageX - elementOffsetX;\r\n\r\n    return left;\r\n  }\r\n\r\n  private getValAtMousePosition(pageX: number) {\r\n    return this.pixelToVal(this.getMousePosition(pageX));\r\n  }\r\n\r\n  /**\r\n   * Perform an external action to bring up an editor for a schedule\r\n   */\r\n  private editSchedule(schedule: WeeklySchedulerRange<any>) {\r\n    if (this.item.canEdit()) {\r\n      schedule.$isEditing = true;\r\n\r\n      let originalSchedule = angular.copy(schedule);\r\n\r\n      this.config.editSlot(schedule).then((newSchedule) => {\r\n        let range = this.rangeFactory.createRange(this.config, newSchedule);\r\n\r\n        if (this.shouldDelete(range)) {\r\n          this.item.removeSchedule(schedule);\r\n        } else {\r\n          let premergeSchedule = angular.copy(range);\r\n\r\n          this.item.mergeSchedule(range);\r\n\r\n          // If merging mutated the schedule further, then updateSchedule would have already been called\r\n          // This is so that edits that don't trigger merges still trigger onChange,\r\n          // but edits that do trigger merges don't trigger it twice\r\n          if (angular.equals(premergeSchedule, range)) {\r\n            // The 'schedule' variable has already been updated with the correct values.\r\n            // The range should be applied as an update to the originalSchedule so that onChange is triggered if necessary\r\n            originalSchedule.update(range);\r\n          }\r\n        }\r\n\r\n        this.ngModelCtrl.$setDirty();\r\n      }).catch(() => {\r\n        // do nothing except eat the unhandled rejection error\r\n      }).finally(() => {\r\n        schedule.$isEditing = false;\r\n      });\r\n    }\r\n  }\r\n\r\n  private getSlotLeft(start: number) {\r\n    let underlyingInterval: HTMLElement = this.getUnderlyingInterval(start);\r\n\r\n    return underlyingInterval.offsetLeft + 'px';\r\n  }\r\n\r\n  private getSlotRight(start: number, end: number) {\r\n    // If there is a null end, place the end of the slot two hours away from the beginning.\r\n    if (this.config.nullEnds && end === null) {\r\n      end = start + this.nullEndWidth;\r\n    }\r\n\r\n    // An end of 0 should display allll the way to the right, up to the edge\r\n    end = this.endAdjusterService.adjustEndForView(this.config, end);\r\n\r\n    // We want the right side to go /up to/ the interval it represents, not cover it, so we must substract 1 interval\r\n    let underlyingInterval = this.getUnderlyingInterval(end - this.config.interval);\r\n\r\n    let offsetRight = underlyingInterval.offsetLeft + underlyingInterval.offsetWidth;\r\n\r\n    let result = this.element.clientWidth - offsetRight;\r\n\r\n    return result + 'px';\r\n  }\r\n\r\n  private getUnderlyingInterval(val: number): HTMLElement {\r\n    val = this.normalizeIntervalValue(val);\r\n\r\n    return this.element.parentElement.querySelector(`[rel='${val}']`);\r\n  }\r\n\r\n  private shouldDelete(schedule: IWeeklySchedulerRange<any>) {\r\n    if (schedule.$isDeleting) {\r\n      return true;\r\n    }\r\n\r\n    if (this.config.fillEmptyWithDefault && schedule.value === this.config.defaultValue) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  public pixelToVal(pixel: number) {\r\n    var percent = pixel / this.element.clientWidth;\r\n    return Math.floor(percent * (this.config.intervalCount) + 0.5) * this.config.interval;\r\n  }\r\n\r\n  private normalizeIntervalValue(value: number) {\r\n    // There is no interval to the right of the rightmost interval -- the last interval will not actually render with a \"rel\" value\r\n    let rightmost = this.config.maxValue - this.config.interval;\r\n\r\n    return this.valueNormalizationService.normalizeValue(value, 0, rightmost);\r\n  }\r\n\r\n  private normalizeGhostValue(value: number) {\r\n    return this.valueNormalizationService.normalizeValue(value, 0, this.config.maxValue);\r\n  }\r\n\r\n  private removeGhost() {\r\n    this.item.$isGhostOrigin = false;\r\n    this.item.$renderGhost = false;\r\n    this.setGhostValues(null);\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport class MultiSliderComponent implements angular.IComponentOptions {\r\n  static $name = 'brMultiSlider';\r\n\r\n  bindings = {\r\n    config: '<',\r\n    dragSchedule: '<',\r\n    ghostValues: '<',\r\n    item: '=ngModel',\r\n    setGhostValues: '&'\r\n  };\r\n\r\n  controller = MultiSliderController.$name;\r\n  controllerAs = MultiSliderController.$controllerAs;\r\n\r\n  require = {\r\n    ngModelCtrl: 'ngModel'\r\n  };\r\n\r\n  template = require('./multislider.html');\r\n}\r\n","module.exports = \"<div class=\\\"ghost-wrapper\\\" br-handle ondragstart=\\\"multiSliderCtrl.onGhostWrapperMouseDown()\\\" ondragstop=\\\"multiSliderCtrl.onGhostWrapperMouseUp()\\\" ondrag=\\\"multiSliderCtrl.onGhostWrapperMouseMove()\\\">\\r\\n    <br-ghost-slot class=\\\"slot\\\"\\r\\n                   ng-if=\\\"multiSliderCtrl.item.canRenderGhost()\\\"\\r\\n                   ng-class=\\\"{\\r\\n                      active: multiSliderCtrl.item.$renderGhost,\\r\\n                      nullEnd: multiSliderCtrl.config.nullEnds\\r\\n                   }\\\"\\r\\n                   ng-style=\\\"{\\r\\n                      left: multiSliderCtrl.getSlotLeft(multiSliderCtrl.ghostValues.left),\\r\\n                      right: multiSliderCtrl.getSlotRight(multiSliderCtrl.ghostValues.left, multiSliderCtrl.ghostValues.right)\\r\\n                   }\\\">\\r\\n        <div class=\\\"slotWrapper\\\">\\r\\n            <div class=\\\"middle fullWidth\\\">\\r\\n                <span ng-if=\\\"!multiSliderCtrl.config.nullEnds\\\">{{ multiSliderCtrl.ghostValues.left | brWeeklySchedulerTimeOfDay }} - {{ multiSliderCtrl.ghostValues.right | brWeeklySchedulerTimeOfDay }}</span>\\r\\n                <span ng-if=\\\"multiSliderCtrl.config.nullEnds\\\">{{ multiSliderCtrl.ghostValues.left | brWeeklySchedulerTimeOfDay }} until</span>\\r\\n            </div>\\r\\n        </div>\\r\\n    </br-ghost-slot>\\r\\n\\r\\n    <br-weekly-slot class=\\\"slot {{ schedule.$class }}\\\"\\r\\n                config=\\\"multiSliderCtrl.config\\\"\\r\\n                get-delta=\\\"multiSliderCtrl.pixelToVal(pixel)\\\"\\r\\n                drag-schedule=\\\"multiSliderCtrl.dragSchedule\\\" \\r\\n                item=\\\"multiSliderCtrl.item\\\"\\r\\n                ng-class=\\\"{\\r\\n                    active: schedule.$isActive,\\r\\n                    disable: !multiSliderCtrl.item.canEditSchedule(schedule),\\r\\n                    nullEnd: schedule.end === null,\\r\\n                    pending: schedule.$isEditing\\r\\n                }\\\"\\r\\n                ng-repeat=\\\"schedule in multiSliderCtrl.item.schedules\\\"\\r\\n                ng-model=\\\"schedule\\\"\\r\\n                ng-style=\\\"{\\r\\n                    left: multiSliderCtrl.getSlotLeft(schedule.start),\\r\\n                    right: multiSliderCtrl.getSlotRight(schedule.start, schedule.end)\\r\\n                }\\\"\\r\\n                edit-schedule=\\\"multiSliderCtrl.editSchedule(schedule)\\\"\\r\\n    ></br-weekly-slot>\\r\\n</div>\";","import * as angular from 'angular';\r\nimport { NullEndDirective } from './NullEndDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.nullEnd', [])\r\n    .directive(NullEndDirective.$name, NullEndDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { NullEndScheduleValidatorService } from '../schedule-validator/NullEndValidatorService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class NullEndDirective implements angular.IDirective {\r\n    static $name = 'brNullEnd';\r\n\r\n    constructor(\r\n        private validator: NullEndScheduleValidatorService\r\n    ) {\r\n    }\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        ngModelCtrl.$validators[this.validator.error] = (modelValue: WeeklySchedulerItem<any>) => {\r\n            return this.validator.validate(modelValue.schedules, modelValue.config);\r\n        };\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = (validator) => {\r\n            return new NullEndDirective(validator);\r\n        };\r\n\r\n        directive.$inject = ['brWeeklySchedulerNullEndValidatorService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { OverlapDirective } from './OverlapDirective';\r\nimport { OverlapService } from './OverlapService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.overlap', [])\r\n    .directive(OverlapDirective.$name, OverlapDirective.Factory())\r\n    .service(OverlapService.$name, OverlapService)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { OverlapValidatorService } from '../schedule-validator/OverlapValidatorService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class OverlapDirective implements angular.IDirective {\r\n    static $name = 'brOverlap';\r\n\r\n    constructor(\r\n        private validator: OverlapValidatorService\r\n    ) {\r\n    }\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        ngModelCtrl.$validators[this.validator.error] = (modelValue: WeeklySchedulerItem<any>) => {\r\n            return this.validator.validate(modelValue.schedules, modelValue.config);\r\n        };\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = (validator) => {\r\n            return new OverlapDirective(validator);\r\n        };\r\n\r\n        directive.$inject = ['brWeeklySchedulerOverlapValidatorService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import { EndAdjusterService } from '../end-adjuster/EndAdjusterService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { OverlapState } from '../weekly-scheduler-config/OverlapStates';\r\n\r\n/** @internal */\r\nexport class OverlapService {\r\n    static $name = 'brWeeklySchedulerOverlapService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerEndAdjusterService'\r\n    ];\r\n\r\n    private constructor(\r\n        private endAdjusterService: EndAdjusterService\r\n    ) {\r\n    }\r\n\r\n    getOverlapState(config: IWeeklySchedulerConfig<any>, current: IWeeklySchedulerRange<any>, other: IWeeklySchedulerRange<any>): OverlapState {\r\n        let currentStart = current.start;\r\n        let currentEnd = this.endAdjusterService.adjustEndForView(config, current.end);\r\n\r\n        let otherStart = other.start;\r\n        let otherEnd = this.endAdjusterService.adjustEndForView(config, other.end);\r\n\r\n        if (otherEnd >= currentEnd && otherStart <= currentStart) {\r\n            return OverlapState.CurrentIsInsideOther;\r\n        }\r\n\r\n        if (currentEnd >= otherEnd && currentStart <= otherStart) {\r\n            return OverlapState.CurrentCoversOther;\r\n        }\r\n\r\n        if (otherEnd > currentStart && otherEnd <= currentEnd) {\r\n            return OverlapState.OtherEndIsInsideCurrent;\r\n        }\r\n\r\n        if (otherStart >= currentStart && otherStart < currentEnd) {\r\n            return OverlapState.OtherStartIsInsideCurrent;\r\n        }\r\n\r\n        if (otherEnd === currentStart && otherEnd <= currentEnd) {\r\n            return OverlapState.OtherEndIsCurrentStart;\r\n        }\r\n\r\n        if (otherStart === currentEnd && otherStart <= currentEnd) {\r\n            return OverlapState.OtherStartIsCurrentEnd;\r\n        }\r\n\r\n        return OverlapState.NoOverlap;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { PurgeDefaultService } from './PurgeDefaultService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.purgeDefault', [])\r\n    .service(PurgeDefaultService.$name, PurgeDefaultService)\r\n    .name;\r\n","import { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\n\r\n/** When using the 'fillEmptyWithDefault' option, this service will be used to delete the default schedules for correct display on the calendar */\r\n/** @internal */\r\nexport class PurgeDefaultService {\r\n    static $name = 'brWeeklySchedulerPurgeDefaultService';\r\n\r\n    purge(schedules: WeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): WeeklySchedulerRange<any>[] {\r\n        let lastIndex = schedules.length - 1;\r\n\r\n        // loop in reverse to avoid messing up indices as we go\r\n        for (let i = lastIndex; i >= 0; i--) {\r\n            if (schedules[i].value === config.defaultValue) {\r\n                schedules.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return schedules;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { ResizeServiceProvider } from './ResizeService';\r\nimport { IResizeService } from './IResizeService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.resize', [])\r\n    .provider(ResizeServiceProvider.$name, ResizeServiceProvider)\r\n    .run([ResizeServiceProvider.$name, (resizeService: IResizeService) => resizeService.initialize()])\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { IResizeServiceProvider } from './IResizeServiceProvider';\r\nimport { WeeklySchedulerEvents } from '../weekly-scheduler-config/WeeklySchedulerEvents';\r\nimport { IResizeService } from './IResizeService';\r\n\r\n/** @internal */\r\nexport class ResizeServiceProvider implements IResizeServiceProvider {\r\n    public static $name = 'br.weeklyScheduler.resizeService';\r\n\r\n    constructor() {\r\n        this.$get.$inject = [\r\n            '$rootScope',\r\n            '$window'\r\n        ]\r\n    }\r\n\r\n    private customResizeEvents: string[] = [];\r\n\r\n    private serviceInitialized: boolean = false;\r\n\r\n    public setCustomResizeEvents(events: string[]) {\r\n        this.customResizeEvents = events;\r\n    }\r\n\r\n    public $get(\r\n        $rootScope: angular.IRootScopeService,\r\n        $window: angular.IWindowService\r\n    ): IResizeService {\r\n        return {\r\n            initialize: () => {\r\n                if (this.serviceInitialized) {\r\n                    return;\r\n                }\r\n        \r\n                $window.addEventListener('resize', () => {\r\n                    // addEventListener exists outside of angular so we have to $apply the change\r\n                    $rootScope.$apply(() => {\r\n                        $rootScope.$broadcast(WeeklySchedulerEvents.RESIZED);\r\n                    });\r\n                });\r\n        \r\n                if (this.customResizeEvents) {\r\n                    this.customResizeEvents.forEach((event) => {\r\n                        $rootScope.$on(event, () => {\r\n                            $rootScope.$broadcast(WeeklySchedulerEvents.RESIZED);\r\n                        })\r\n                    })\r\n                }\r\n        \r\n                this.serviceInitialized = true; \r\n            }\r\n        };\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { RestrictionExplanationsComponent, RestrictionExplanationsController } from './RestrictionExplanationsComponent';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.restrictionExplanations', [])\r\n    .component(RestrictionExplanationsComponent.$name, new RestrictionExplanationsComponent())\r\n    .controller(RestrictionExplanationsController.$name, RestrictionExplanationsController)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { WeeklySchedulerController } from '../weekly-scheduler/weekly-scheduler';\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\nimport { IWeeklySchedulerFilterService } from '../weekly-scheduler-config/IWeeklySchedulerFilterService';\r\n\r\n/** @internal */\r\nexport class RestrictionExplanationsController implements angular.IComponentController {\r\n    static $controllerAs = 'restrictionExplanationsCtrl';\r\n    static $name = 'brWeeklySchedulerRestrictionExplanationsController';\r\n\r\n    static $inject = ['$filter'];\r\n\r\n    private schedulerCtrl: WeeklySchedulerController;\r\n\r\n    private explanations: { [key in ValidationError]?: string } = {};\r\n\r\n    constructor(\r\n        private $filter: IWeeklySchedulerFilterService\r\n    ) {\r\n    }\r\n\r\n    $onInit() {\r\n        let config = this.schedulerCtrl.config;\r\n\r\n        if (config.maxTimeSlot) {\r\n            let maxTimeSlot = this.$filter('brWeeklySchedulerSecondsAsText')(config.maxTimeSlot);\r\n            this.explanations[ValidationError.MaxTimeSlot] = config.restrictionExplanations.maxTimeSlot(maxTimeSlot);\r\n        }\r\n\r\n        if (config.fullCalendar) {\r\n            this.explanations[ValidationError.FullCalendar] = config.restrictionExplanations.fullCalendar;\r\n        }\r\n\r\n        if (config.monoSchedule) {\r\n            this.explanations[ValidationError.MonoSchedule] = config.restrictionExplanations.monoSchedule;\r\n        }\r\n\r\n        if (config.nullEnds) {\r\n            this.explanations[ValidationError.NullEnd] = config.restrictionExplanations.nullEnds;\r\n        }\r\n\r\n        if (config.scheduleCountOptions && config.scheduleCountOptions.count) {\r\n            this.explanations[ValidationError.ScheduleCount] = config.restrictionExplanations.scheduleCount(config.scheduleCountOptions);\r\n        }\r\n\r\n        if (config.minimumSeparation) {\r\n            let minimumSeparation = this.$filter('brWeeklySchedulerSecondsAsText')(config.minimumSeparation);\r\n            this.explanations[ValidationError.MinimumSeparation] = config.restrictionExplanations.minimumSeparation(minimumSeparation);\r\n        }\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport class RestrictionExplanationsComponent implements angular.IComponentOptions {\r\n    static $name = 'brRestrictionExplanations';\r\n\r\n    controller = RestrictionExplanationsController.$name;\r\n    controllerAs = RestrictionExplanationsController.$controllerAs;\r\n\r\n    require = {\r\n        schedulerCtrl: '^brWeeklyScheduler'\r\n    };\r\n\r\n    template = `\r\n        <div class=\"srow explanations\" ng-class=\"{ violation: restrictionExplanationsCtrl.schedulerCtrl.formController.$error[key] }\" ng-repeat=\"(key, explanation) in restrictionExplanationsCtrl.explanations\">\r\n            {{ explanation }}\r\n        </div>\r\n    `;\r\n}\r\n","import * as angular from 'angular';\r\nimport { RevalidateDirective } from './RevalidateDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.revalidate', [])\r\n    .directive(RevalidateDirective.$name, RevalidateDirective.Factory())\r\n    .name;\r\n","/**\r\n * Runs custom validators whenever the model changes\r\n */\r\n\r\n/** @internal */\r\nexport class RevalidateDirective implements angular.IDirective {\r\n    static $name = 'brRevalidate';\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        scope.$watch(attrs.ngModel, () => {\r\n            ngModelCtrl.$validate();\r\n        }, true);\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = () => {\r\n            return new RevalidateDirective();\r\n        };\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { ScheduleAreaContainerComponent, ScheduleAreaContainerController } from './schedule-area-container';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.scheduleAreaContainer', [])\r\n    .component(ScheduleAreaContainerComponent.$name, new ScheduleAreaContainerComponent())\r\n    .controller(ScheduleAreaContainerController.$name, ScheduleAreaContainerController)\r\n    .name;\r\n","import { ScrollService } from '../scroll/ScrollService';\r\nimport { ZoomService } from '../zoom/ZoomService';\r\nimport { WeeklySchedulerEvents } from '../weekly-scheduler-config/WeeklySchedulerEvents';\r\n\r\n/** @internal */\r\nexport class ScheduleAreaContainerController implements angular.IComponentController {\r\n    static $name = 'brWeeklySchedulerScheduleAreaContainerController';\r\n\r\n    static $inject = [\r\n        '$element',\r\n        '$scope',\r\n        'brWeeklySchedulerScrollService',\r\n        'brWeeklySchedulerZoomService'\r\n    ];\r\n\r\n    constructor(\r\n        private $element: angular.IAugmentedJQuery,\r\n        private $scope: angular.IScope,\r\n        private scrollService: ScrollService,\r\n        private zoomService: ZoomService\r\n    ) {\r\n    }\r\n\r\n    $postLink() {\r\n        let element = this.$element[0]; // grab plain js, not jqlite\r\n\r\n        this.scrollService.hijackScroll(element, 20);\r\n        this.zoomService.resetZoom(element);\r\n\r\n\r\n        this.$scope.$on(WeeklySchedulerEvents.CLICK_ON_A_CELL, (e, data) => {\r\n            this.zoomService.zoomInACell(element, e, data);\r\n        });\r\n\r\n        this.$scope.$on(WeeklySchedulerEvents.RESET_ZOOM, (e) => {\r\n            this.zoomService.resetZoom(element);\r\n        });\r\n\r\n        this.$scope.$on(WeeklySchedulerEvents.ZOOM_IN, (e) => {\r\n            this.zoomService.zoomIn(element);\r\n        });\r\n    }\r\n}\r\n\r\n/** @internal */\r\nexport class ScheduleAreaContainerComponent implements angular.IComponentOptions {\r\n    static $name = 'brScheduleAreaContainer';\r\n\r\n    controller = ScheduleAreaContainerController.$name;\r\n    transclude = true;\r\n\r\n    template = require('./schedule-area-container.html');\r\n}\r\n","module.exports = \"<ng-transclude></ng-transclude>\";","import * as angular from 'angular';\r\nimport { ScheduleCountDirective } from './ScheduleCountDirective';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.scheduleCount', [])\r\n    .directive(ScheduleCountDirective.$name, ScheduleCountDirective.Factory())\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { ScheduleCountValidatorService } from '../schedule-validator/ScheduleCountValidatorService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\n\r\n/** @internal */\r\nexport class ScheduleCountDirective implements angular.IDirective {\r\n    static $name = 'brScheduleCount';\r\n\r\n    constructor(\r\n        private validator: ScheduleCountValidatorService\r\n    ) {\r\n    }\r\n\r\n    link = (scope: angular.IScope, element: angular.IAugmentedJQuery, attrs: angular.IAttributes, ngModelCtrl: angular.INgModelController) => {\r\n        if (attrs.brScheduleCount) {\r\n            ngModelCtrl.$validators[this.validator.error] = (modelValue: WeeklySchedulerItem<any>) => {\r\n                return this.validator.validate(modelValue.schedules, modelValue.config);\r\n            };\r\n        }\r\n    }\r\n\r\n    require = 'ngModel';\r\n\r\n    static Factory() {\r\n        let directive = (validator) => {\r\n            return new ScheduleCountDirective(validator);\r\n        };\r\n\r\n        directive.$inject = ['brWeeklySchedulerScheduleCountValidatorService'];\r\n\r\n        return directive;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { FullCalendarValidatorService } from './FullCalendarValidatorService';\r\nimport { MaxTimeSlotValidatorService } from './MaxTimeSlotValidatorService';\r\nimport { MinimumSeparationValidatorService } from './MinimumSeparationValidatorService';\r\nimport { MonoScheduleValidatorService } from './MonoScheduleValidatorService';\r\nimport { NullEndScheduleValidatorService } from './NullEndValidatorService';\r\nimport { OverlapValidatorService } from './OverlapValidatorService';\r\nimport { ScheduleCountValidatorService } from './ScheduleCountValidatorService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.scheduleValidation', [])\r\n    .service(FullCalendarValidatorService.$name, FullCalendarValidatorService)\r\n    .service(MaxTimeSlotValidatorService.$name, MaxTimeSlotValidatorService)\r\n    .service(MinimumSeparationValidatorService.$name, MinimumSeparationValidatorService)\r\n    .service(MonoScheduleValidatorService.$name, MonoScheduleValidatorService)\r\n    .service(NullEndScheduleValidatorService.$name, NullEndScheduleValidatorService)\r\n    .service(OverlapValidatorService.$name, OverlapValidatorService)\r\n    .service(ScheduleCountValidatorService.$name, ScheduleCountValidatorService)\r\n    .name;\r\n","import { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { ValidatorService } from '../schedule-validator/ValidatorService';\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\n\r\n/** @internal */\r\nexport class FullCalendarValidatorService implements ValidatorService {\r\n    static $name = 'brWeeklySchedulerFullCalendarValidatorService';\r\n\r\n    get error() {\r\n        return ValidationError.FullCalendar;\r\n    }\r\n\r\n    public validate(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        if (!config.fullCalendar) {\r\n            return true;\r\n        }\r\n\r\n        \r\n        // When this option is true we should enforce that there are no gaps in the schedules\r\n        let len = schedules.length;\r\n\r\n        // If there are no schedules, it automatically fails.\r\n        if (!len) {\r\n            return false;\r\n        }\r\n        \r\n        // If there was only one item we should check that it spans the whole range\r\n        if (len === 1) {\r\n            let schedule = schedules[0];\r\n            return this.validateStartAtMinValue(schedule.start) && this.validateEndAtMaxValue(schedule.end, config);\r\n        }\r\n\r\n        // If more, compare two at a time until the end\r\n        let loopLen = len - 1;\r\n        let result = true;\r\n\r\n        // Sort by start time first\r\n        let sortedSchedules = schedules.sort((a, b) => a.start > b.start ? 1 : -1);\r\n\r\n        for (let i = 0; i < loopLen; i++) {\r\n            let current = schedules[i];\r\n            let next = schedules[i + 1];\r\n            \r\n            // Validate that the first item lands at 0\r\n            if (i === 0 && !this.validateStartAtMinValue(current.start)) {\r\n                return false;\r\n            }\r\n\r\n            // Validate that the last item lands at maxValue\r\n            if (i === loopLen - 1 && !this.validateEndAtMaxValue(next.end, config)) {\r\n                return false;\r\n            }\r\n\r\n            result = result && current.end === next.start;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private validateStartAtMinValue(start: number) {\r\n        return start === 0;\r\n    }\r\n\r\n    private validateEndAtMaxValue(end: number, config: IWeeklySchedulerConfig<any>) {\r\n        return (end || config.maxValue) === config.maxValue;\r\n    }\r\n}\r\n","import { EndAdjusterService } from '../end-adjuster/EndAdjusterService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { ValidatorService } from '../schedule-validator/ValidatorService';\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\n\r\n/** @internal */\r\nexport class MaxTimeSlotValidatorService implements ValidatorService {\r\n    static $name = 'brWeeklySchedulerMaxTimeSlotValidatorService';\r\n\r\n    static $inject = ['brWeeklySchedulerEndAdjusterService'];\r\n\r\n    private constructor(\r\n        private endAdjusterService: EndAdjusterService\r\n    ) {\r\n    }\r\n\r\n    get error() {\r\n        return ValidationError.MaxTimeSlot;\r\n    }\r\n\r\n    public validate(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        let maxTimeSlot = config.maxTimeSlot;\r\n\r\n        if (!maxTimeSlot) {\r\n            return true;\r\n        }\r\n\r\n        return !schedules.some(s => s.value !== config.defaultValue && this.endAdjusterService.adjustEndForView(config, s.end) - s.start > maxTimeSlot);\r\n    }\r\n}\r\n","import { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { ValidatorService } from '../schedule-validator/ValidatorService'\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\n\r\n/** @internal */\r\nexport class MinimumSeparationValidatorService implements ValidatorService {\r\n    static $name = 'brWeeklySchedulerMinimumSeparationValidatorService';\r\n\r\n    get error() {\r\n        return ValidationError.MinimumSeparation;\r\n    }\r\n\r\n    public validate(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        if (!config.minimumSeparation) {\r\n            return true;\r\n        }\r\n\r\n        const len = schedules.length;\r\n\r\n        if (len <= 1) {\r\n            return true;\r\n        }\r\n\r\n        const loopLen = len - 1;\r\n\r\n        schedules.sort((a, b) => a.start - b.start);\r\n\r\n        for (let i = 0; i < loopLen; i++) {\r\n            let currentSchedule = schedules[i];\r\n            let nextSchedule = schedules[i + 1];\r\n\r\n            if (nextSchedule.start - currentSchedule.end < config.minimumSeparation) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { ValidatorService } from '../schedule-validator/ValidatorService'\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\n\r\n/** @internal */\r\nexport class MonoScheduleValidatorService implements ValidatorService {\r\n    static $name = 'brWeeklySchedulerMonoScheduleValidatorService';\r\n\r\n    get error() {\r\n        return ValidationError.MonoSchedule;\r\n    }\r\n\r\n    /** Important note -- this does not validate that only one schedule exists per item, but rather that only one NON-DEFAULT schedule exists per item. */\r\n    public validate(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        if (!config.monoSchedule) {\r\n            return true;\r\n        }\r\n\r\n        // If a default value is defined, schedules with default values don't count -- one non-default schedule per item.\r\n        let schedulesToValidate;\r\n\r\n        if (angular.isDefined(config.defaultValue)) {\r\n            schedulesToValidate = schedules.filter(schedule => schedule.value !== config.defaultValue);\r\n        } else {\r\n            schedulesToValidate = schedules;\r\n        }\r\n\r\n        // only allowed empty or 1 schedule per item\r\n        return !schedulesToValidate.length || schedulesToValidate.length === 1;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { ValidatorService } from '../schedule-validator/ValidatorService'\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\n\r\n/** @internal */\r\nexport class NullEndScheduleValidatorService implements ValidatorService {\r\n    static $name = 'brWeeklySchedulerNullEndValidatorService';\r\n\r\n    get error() {\r\n        return ValidationError.NullEnd;\r\n    }\r\n\r\n    validate(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        if (config.nullEnds) {\r\n            return schedules.length <= 1 && schedules.every(schedule => schedule.end === null);\r\n        } else {\r\n            return schedules.every(schedule => schedule.end !== null);\r\n        }\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { OverlapService } from '../overlap/OverlapService';\r\nimport { ValidatorService } from '../schedule-validator/ValidatorService'\r\nimport { OverlapState } from '../weekly-scheduler-config/OverlapStates';\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\n\r\n/** @internal */\r\nexport class OverlapValidatorService implements ValidatorService {\r\n    static $name = 'brWeeklySchedulerOverlapValidatorService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerOverlapService'\r\n    ];\r\n    \r\n    private constructor(\r\n        private overlapService: OverlapService\r\n    ) {\r\n    }\r\n\r\n    get error() {\r\n        return ValidationError.Overlap;\r\n    }\r\n\r\n    public validate(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        // Compare two at a time until the end\r\n        let len = schedules.length;\r\n        let result = true;\r\n\r\n        for (let i = 0; i < len - 1; i++) {\r\n            let current = schedules[i];\r\n            let next = schedules[i + 1];\r\n\r\n            let valuesMatch = current.value === next.value;\r\n\r\n            if (!valuesMatch) {\r\n                let overlapState = this.overlapService.getOverlapState(config, current, next);\r\n                result = result && [OverlapState.NoOverlap, OverlapState.OtherStartIsCurrentEnd, OverlapState.OtherEndIsCurrentStart].indexOf(overlapState) > -1;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","import { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { ValidatorService } from '../schedule-validator/ValidatorService'\r\nimport { ValidationError } from '../weekly-scheduler-config/ValidationErrors';\r\n\r\n/** @internal */\r\nexport class ScheduleCountValidatorService implements ValidatorService {\r\n    static $name = 'brWeeklySchedulerScheduleCountValidatorService';\r\n\r\n    get error() {\r\n        return ValidationError.ScheduleCount;\r\n    }\r\n\r\n    public validate(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        if (!config.scheduleCountOptions.count) {\r\n            return true;    \r\n        }\r\n\r\n        if (config.scheduleCountOptions.exact) {\r\n            return this.validateExactCount(schedules, config);\r\n        } else {\r\n            return this.validateMaxCount(schedules, config);\r\n        }\r\n    }\r\n\r\n    private validateExactCount(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        return schedules.length === config.scheduleCountOptions.count;\r\n    }\r\n\r\n    private validateMaxCount(schedules: IWeeklySchedulerRange<any>[], config: IWeeklySchedulerConfig<any>): boolean {\r\n        return schedules.length <= config.scheduleCountOptions.count;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { ScrollService } from './ScrollService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.scroll', [])\r\n    .service(ScrollService.$name, ScrollService)\r\n    .name;\r\n","import { ZoomService } from '../zoom/ZoomService';\r\n\r\n/** @internal */\r\nexport class ScrollService {\r\n    static $name = 'brWeeklySchedulerScrollService';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerZoomService'\r\n    ];\r\n\r\n    private constructor(\r\n        private zoomService: ZoomService\r\n    ) {\r\n    }\r\n\r\n    public hijackScroll(element, delta) {\r\n        element.addEventListener('mousewheel', (event: WheelEvent) => {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n\r\n            if (event.ctrlKey) {\r\n                this.zoomService.zoomByScroll(element, event, delta);\r\n            } else {\r\n                if ((event.wheelDelta || event.detail) > 0) {\r\n                    element.scrollLeft -= delta;\r\n                } else {\r\n                    element.scrollLeft += delta;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { SecondsAsTextFilter } from './SecondsAsTextFilter';\r\nimport { TimeConstantsService } from './TimeConstantsService';\r\nimport { TimeOfDayFilter } from './TimeOfDayFilter';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.time', [])\r\n    .filter(SecondsAsTextFilter.$name, SecondsAsTextFilter.Factory()) \r\n    .filter(TimeOfDayFilter.$name, TimeOfDayFilter.Factory())\r\n    .service(TimeConstantsService.$name, TimeConstantsService)\r\n    .name;\r\n","import { TimeConstantsService } from './TimeConstantsService';\r\n\r\n/** @internal */\r\nexport class SecondsAsTextFilter {\r\n    static $name = 'brWeeklySchedulerSecondsAsText';\r\n\r\n    public static Factory() {\r\n        let factoryFunction = (timeConstants: TimeConstantsService) => {\r\n            return function(seconds: number): string {\r\n                let result = ``;\r\n\r\n                let hours = Math.floor(seconds / timeConstants.SECONDS_IN_HOUR);\r\n\r\n                result = SecondsAsTextFilter.addHoursToResult(result, hours);\r\n\r\n                seconds -= hours * timeConstants.SECONDS_IN_HOUR;\r\n\r\n                let minutes = Math.floor(seconds / timeConstants.SECONDS_IN_MINUTE);\r\n\r\n                result = SecondsAsTextFilter.addMinutesToResult(result, minutes);\r\n\r\n                seconds -= minutes * timeConstants.SECONDS_IN_MINUTE;\r\n\r\n                result = SecondsAsTextFilter.addSecondsToResult(result, seconds);\r\n\r\n                if (!result) {\r\n                    result = 'none';\r\n                }\r\n\r\n                return result;\r\n            }\r\n        };\r\n\r\n        factoryFunction.$inject = ['brWeeklySchedulerTimeConstantsService'];\r\n\r\n        return factoryFunction;\r\n    }\r\n\r\n    private static addHoursToResult(result: string, hours: number) {\r\n        if (hours) {\r\n            result += `${hours} hours`;\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static addMinutesToResult(result: string, minutes: number) {\r\n        if (minutes) {\r\n            if (result) {\r\n                result += ` `;\r\n            }\r\n\r\n            result += `${minutes} minute${minutes > 1 ? 's' : ''}`; \r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    private static addSecondsToResult(result: string, seconds: number) {\r\n        if (seconds) {\r\n            if (result) {\r\n                result += ` `;\r\n            }\r\n\r\n            result += `${seconds} second${seconds > 1 ? 's' : ''}`;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","/** @internal */\r\nexport class TimeConstantsService {\r\n    static $name = 'brWeeklySchedulerTimeConstantsService';\r\n\r\n    public get SECONDS_IN_DAY() {\r\n        return this.MINUTES_IN_DAY * this.SECONDS_IN_MINUTE; \r\n    }\r\n\r\n    public get SECONDS_IN_HOUR() {\r\n        return this.SECONDS_IN_MINUTE * this.MINUTES_IN_HOUR;\r\n    }\r\n\r\n    public get SECONDS_IN_MINUTE() {\r\n        return 60;\r\n    }\r\n\r\n    public get HOURS_IN_DAY() {\r\n        return 24;\r\n    }\r\n\r\n    public get MINUTES_IN_DAY() {\r\n        return this.MINUTES_IN_HOUR * this.HOURS_IN_DAY;\r\n    }\r\n\r\n    public get MINUTES_IN_HOUR() {\r\n        return 60;\r\n    }\r\n}\r\n","import { TimeConstantsService } from './TimeConstantsService';\r\n\r\n/** @internal */\r\nexport class TimeOfDayFilter {\r\n    static $name = 'brWeeklySchedulerTimeOfDay';\r\n\r\n    public static Factory() {\r\n        let factoryFunction = (timeConstants: TimeConstantsService) => {\r\n            return function(seconds: number): string {\r\n                let hours = Math.floor(seconds / timeConstants.SECONDS_IN_HOUR);\r\n                let meridiem = hours > 11 && hours < 24 ? 'P' : 'A';\r\n\r\n                seconds -= hours * timeConstants.SECONDS_IN_HOUR;\r\n\r\n                let minutes = Math.floor(seconds / timeConstants.SECONDS_IN_MINUTE);\r\n                seconds -= minutes * timeConstants.SECONDS_IN_MINUTE;\r\n\r\n                let remainingMinutes = minutes.toString()\r\n\r\n                if (remainingMinutes.length == 1) {\r\n                    remainingMinutes = '0' + remainingMinutes;\r\n                }\r\n\r\n                let displayHours = hours % 12 || 12;\r\n\r\n                if (!seconds) {\r\n                    return `${displayHours}:${remainingMinutes}${meridiem}`;\r\n                } else {\r\n                    return `${displayHours}:${remainingMinutes}:${seconds}${meridiem}`;\r\n                }\r\n            }\r\n        };\r\n\r\n        factoryFunction.$inject = ['brWeeklySchedulerTimeConstantsService']\r\n\r\n        return factoryFunction;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { TimeRangeComponent, TimeRangeController } from './TimeRangeComponent';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.timeRange', [])\r\n    .component(TimeRangeComponent.$name, new TimeRangeComponent())\r\n    .controller(TimeRangeController.$name, TimeRangeController)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\n\r\n/** @internal */\r\nexport class TimeRangeComponent implements angular.IComponentOptions {\r\n    static $name = 'brTimeRange';\r\n\r\n    bindings = {\r\n        schedule: '<'\r\n    }\r\n\r\n    controller = TimeRangeController.$name;\r\n    controllerAs = TimeRangeController.$controllerAs;\r\n\r\n    template = `\r\n        <span ng-if=\"timeRangeCtrl.hasStart && timeRangeCtrl.hasEnd\">{{ timeRangeCtrl.schedule.start | brWeeklySchedulerTimeOfDay }}-{{ timeRangeCtrl.schedule.end | brWeeklySchedulerTimeOfDay }}</span>\r\n        <span ng-if=\"timeRangeCtrl.hasStart && !timeRangeCtrl.hasEnd\">{{ timeRangeCtrl.schedule.start | brWeeklySchedulerTimeOfDay }} until</span>\r\n    `\r\n}\r\n\r\n/** @internal */\r\nexport class TimeRangeController implements angular.IComponentController {\r\n    static $controllerAs = 'timeRangeCtrl';\r\n    static $name = 'brTimeRangeController';\r\n\r\n    private hasStart: boolean;\r\n    private hasEnd: boolean;\r\n\r\n    private schedule: IWeeklySchedulerRange<any>;\r\n\r\n    $onInit() {\r\n        this.hasStart = angular.isDefined(this.schedule.start);\r\n        this.hasEnd = angular.isDefined(this.schedule.end) && this.schedule.end !== null;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { TouchService } from './TouchService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.touch', [])\r\n    .service(TouchService.$name, TouchService)\r\n    .name;\r\n","/** @internal */\r\nexport class TouchService {\r\n    static $name = 'brWeeklySchedulerTouchService';\r\n\r\n    public getTouches(event: any): any { // todo\r\n        if (event.originalEvent) {\r\n            if (event.originalEvent.touches && event.originalEvent.touches.length) {\r\n                return event.originalEvent.touches;\r\n            } else if (event.originalEvent.changedTouches && event.originalEvent.changedTouches.length) {\r\n                return event.originalEvent.changedTouches;\r\n            }\r\n        }\r\n\r\n        if (!event.touches) {\r\n            event.touches = [event.originalEvent];\r\n        }\r\n\r\n        return event.touches;\r\n    }\r\n    \r\n    public getPageX(event: any): number {\r\n        let touches = this.getTouches(event);\r\n\r\n        if (touches && touches.length && touches[0]) {\r\n            return touches[0].pageX;\r\n        }\r\n\r\n        return null;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { DayMap } from './DayMap';\r\nimport { NullEndWidth } from './NullEndWidth';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.weeklySchedulerConfig', [])\r\n    .constant(DayMap.$name, DayMap.value)\r\n    .constant(NullEndWidth.$name, NullEndWidth.value)\r\n    .name;\r\n","import { Days } from '../weekly-scheduler-config/Days';\r\n\r\n/** Ahhahhahh! Fighter of the NightMap! */\r\n/** @internal */\r\nexport class DayMap {\r\n    static $name = 'brWeeklySchedulerDayMap';\r\n    \r\n    static value = {\r\n        [Days.Monday]: 'Mon',\r\n        [Days.Tuesday]: 'Tue',\r\n        [Days.Wednesday]: 'Wed',\r\n        [Days.Thursday]: 'Thur',\r\n        [Days.Friday]: 'Fri',\r\n        [Days.Saturday]: 'Sat',\r\n        [Days.Sunday]: 'Sun' \r\n    }\r\n}\r\n","/** @internal */\r\nexport class NullEndWidth {\r\n    static $name = 'brWeeklySchedulerNullEndWidth';\r\n\r\n    static value = 7200; \r\n}\r\n","import * as angular from 'angular';\r\nimport { WeeklySchedulerComponent, WeeklySchedulerController } from './weekly-scheduler';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.weeklyScheduler', [])\r\n    .component(WeeklySchedulerComponent.$name, new WeeklySchedulerComponent())\r\n    .controller(WeeklySchedulerController.$name, WeeklySchedulerController)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { AdapterService } from '../adapter/AdapterService';\r\nimport { ConfigurationService } from '../configuration/ConfigurationService';\r\nimport { ConflictingOptionsService } from '../conflicting-options/ConflictingOptionsService';\r\nimport { LastGhostDayService } from '../last-ghost-day/LastGhostDayService';\r\nimport { MissingDaysService } from '../missing-days/MissingDaysService';\r\nimport { IWeeklySchedulerAdapter } from '../adapter/IWeeklySchedulerAdapter';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerOptions } from '../weekly-scheduler-config/IWeeklySchedulerOptions';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\nimport { WeeklySchedulerEvents } from '../weekly-scheduler-config/WeeklySchedulerEvents';\r\n\r\n/** @internal */\r\nexport class WeeklySchedulerController implements angular.IController {\r\n  static $controllerAs = 'schedulerCtrl';\r\n  static $name = 'brWeeklySchedulerController';\r\n\r\n  static $inject = [\r\n    '$element',\r\n    '$scope',\r\n    '$timeout',\r\n    'brWeeklySchedulerAdapterService',\r\n    'brWeeklySchedulerConfigurationService',\r\n    'brWeeklySchedulerConflictingOptionsService',\r\n    'brWeeklySchedulerLastGhostDayService',\r\n    'brWeeklySchedulerMissingDaysService'\r\n  ];\r\n\r\n  constructor(\r\n    private $element: angular.IAugmentedJQuery,\r\n    private $scope: angular.IScope,\r\n    private $timeout: angular.ITimeoutService,\r\n    private adapterService: AdapterService,\r\n    private configurationService: ConfigurationService,\r\n    private conflictingOptionsService: ConflictingOptionsService,\r\n    private lastGhostDayService: LastGhostDayService,\r\n    private missingDaysService: MissingDaysService,\r\n  ) {\r\n  }\r\n\r\n  private _originalItems: WeeklySchedulerItem<any>[];\r\n\r\n  private adapter: IWeeklySchedulerAdapter<any, any>;\r\n\r\n  public invalidMessage: string = '';\r\n\r\n  private dragSchedule: WeeklySchedulerRange<any>;\r\n\r\n  private ghostValues: { left: number, right: number };\r\n\r\n  /** this is required to be part of a form for dirty/valid checks */\r\n  public formController: angular.IFormController;\r\n\r\n  public hoverClass: string;\r\n\r\n  public config: IWeeklySchedulerConfig<any>;\r\n  public items: WeeklySchedulerItem<any>[];\r\n  public options: IWeeklySchedulerOptions<any>;\r\n\r\n  $onInit() {\r\n    this.config = this.configurationService.getConfiguration(this.options);\r\n    this.buildItemsFromAdapter();\r\n    this.watchAdapter();\r\n    this.watchHoverClass();\r\n  }\r\n\r\n  $postLink() {\r\n    this.$scope.$on(WeeklySchedulerEvents.SLOT_DRAGGED, (event: angular.IAngularEvent, schedule: WeeklySchedulerRange<any>) => {\r\n      this.dragSchedule = schedule;\r\n    });\r\n\r\n    this.$scope.$on(WeeklySchedulerEvents.DRAG_ENDED, () => {\r\n      this.dragSchedule = null;\r\n    });\r\n\r\n    this.$scope.$on(WeeklySchedulerEvents.GHOST_DRAG_ENDED, (event: angular.IAngularEvent, ghostSchedule: WeeklySchedulerRange<any>) => {\r\n      this.$scope.$broadcast(WeeklySchedulerEvents.COMMIT_GHOST, ghostSchedule);\r\n    });\r\n\r\n    this.$scope.$on(WeeklySchedulerEvents.REMOVE_LAST_GHOST, () => {\r\n      let lastGhostDay = this.lastGhostDayService.getLastGhostDay(this.items);\r\n\r\n      this.$scope.$broadcast(WeeklySchedulerEvents.REMOVE_GHOST, lastGhostDay);\r\n    });\r\n\r\n    this.$scope.$on(WeeklySchedulerEvents.CANCEL_GHOST, () => {\r\n      this.$scope.$broadcast(WeeklySchedulerEvents.REMOVE_ALL_GHOSTS);\r\n    });\r\n\r\n    this.$timeout(() => {\r\n      this.invalidMessage = this.getInvalidMessage();\r\n    });\r\n  }\r\n\r\n  public getInvalidMessage() {\r\n    let conflictingOptions = this.conflictingOptionsService.getConflictingOptions(this.options);\r\n\r\n    if (conflictingOptions) {\r\n      return conflictingOptions;\r\n    }\r\n\r\n    if (this.hasInvalidSchedule()) {\r\n      return 'One or more of the schedules is invalid! Please contact service.';\r\n    }\r\n  }\r\n\r\n  public hasInvalidSchedule() {\r\n    return this.formController.$invalid;\r\n  }\r\n\r\n  private buildItems(items: WeeklySchedulerItem<any>[]) {\r\n    this.items = this.missingDaysService.fillItems(this.config, items);\r\n\r\n    this.items = this.purgeItems(this.items);\r\n\r\n    this.items.forEach(item => item.mergeOverlaps());\r\n\r\n    // keep a reference on the adapter so we can pull it out later\r\n    this.adapter.items = this.items;\r\n\r\n    // keep a copy of the items in case we need to rollback\r\n    this._originalItems = angular.copy(this.items);\r\n  }\r\n\r\n  private buildItemsFromAdapter() {\r\n    let items = this.adapterService.getItemsFromAdapter(this.config, this.adapter);\r\n\r\n    return this.buildItems(items);\r\n  }\r\n\r\n  private purgeItems(items: WeeklySchedulerItem<any>[]) {\r\n    if (this.config.fillEmptyWithDefault) {\r\n      for (let item of items) {\r\n        item.purgeDefaultSchedules();\r\n\r\n        if(this.config.nullEnds) {\r\n          item.forceNullEnds();\r\n        }\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  private prepareItems(items: WeeklySchedulerItem<any>[]) {\r\n    if (this.config.fillEmptyWithDefault) {\r\n      for (let item of items) {\r\n        item.fillEmptySlotsWithDefaultSchedules();\r\n      }\r\n    }\r\n\r\n    return items;\r\n  }\r\n\r\n  private setGhostValues(ghostValues: { left: number, right: number }) {\r\n    this.ghostValues = ghostValues;\r\n  }\r\n\r\n  private resetZoom() {\r\n    this.$scope.$broadcast(WeeklySchedulerEvents.RESET_ZOOM);\r\n  }\r\n\r\n  private zoomIn() {\r\n    this.$scope.$broadcast(WeeklySchedulerEvents.ZOOM_IN);\r\n  }\r\n\r\n  private rollback() {\r\n    this.buildItems(this._originalItems);\r\n    this.formController.$setPristine();\r\n  }\r\n\r\n  private save() {\r\n    this.items = this.prepareItems(this.items);\r\n\r\n    return this.config.saveScheduler().then(() => {\r\n      this.items = this.purgeItems(this.items);\r\n      this.formController.$setPristine();\r\n    });\r\n  }\r\n\r\n  private watchAdapter() {\r\n    this.$scope.$watch(() => {\r\n      return this.adapter;\r\n    }, () => {\r\n      this.buildItemsFromAdapter();\r\n    });\r\n  }\r\n\r\n  private watchHoverClass() {\r\n    const pulseClass = 'pulse';\r\n    const pulseSelector = `.${pulseClass}`;\r\n\r\n    this.$scope.$watch(() => this.hoverClass, () => {\r\n      this.$element.find(pulseSelector).removeClass(pulseClass);\r\n\r\n      if (this.hoverClass) {\r\n        this.$element.find(`.${this.hoverClass}`).addClass(pulseClass);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport class WeeklySchedulerComponent implements angular.IComponentOptions {\r\n  static $name = 'brWeeklyScheduler';\r\n\r\n  bindings = {\r\n    adapter: '<',\r\n    hoverClass: '<',\r\n    options: '='\r\n  };\r\n\r\n  controller = WeeklySchedulerController.$name;\r\n  controllerAs = WeeklySchedulerController.$controllerAs;\r\n\r\n  require = {\r\n    formController: 'form'\r\n  };\r\n\r\n  template = require('./weekly-scheduler.html');\r\n};\r\n","module.exports = \"<div ng-if=\\\"!schedulerCtrl.invalidMessage\\\">\\r\\n  <div class=\\\"labels\\\">\\r\\n    <div class=\\\"srow dummy\\\"></div>\\r\\n    <div class=\\\"srow schedule-animate\\\" ng-repeat=\\\"item in schedulerCtrl.items track by item.day\\\">\\r\\n      {{ item.label }}\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <br-schedule-area-container>\\r\\n    <div class=\\\"schedule-area\\\">\\r\\n\\r\\n      <div class=\\\"srow timestamps\\\">\\r\\n        <br-hourly-grid></br-hourly-grid>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"srow calendar schedule-animate\\\" ng-repeat=\\\"item in schedulerCtrl.items track by item.day\\\">\\r\\n        <br-hourly-grid no-text></br-hourly-grid>\\r\\n        <br-multi-slider config=\\\"schedulerCtrl.config\\\"\\r\\n                        br-full-calendar=\\\"{{ schedulerCtrl.config.fullCalendar }}\\\"\\r\\n                        br-max-time-slot=\\\"{{ schedulerCtrl.config.maxTimeSlot }}\\\"\\r\\n                        br-minimum-separation=\\\"{{ schedulerCtrl.config.minimumSeparation }}\\\"\\r\\n                        br-mono-schedule=\\\"{{ schedulerCtrl.config.monoSchedule }}\\\"\\r\\n                        br-null-end=\\\"{{ schedulerCtrl.config.nullEnds }}\\\"\\r\\n                        br-schedule-count=\\\"{{ schedulerCtrl.config.scheduleCountOptions && schedulerCtrl.config.scheduleCountOptions.count }}\\\"\\r\\n                        br-overlap\\r\\n                        br-revalidate\\r\\n                        drag-schedule=\\\"schedulerCtrl.dragSchedule\\\"\\r\\n                        ghost-values=\\\"schedulerCtrl.ghostValues\\\"\\r\\n                        ng-model=\\\"item\\\"\\r\\n                        ng-model-options=\\\"{allowInvalid: true}\\\"\\r\\n                        set-ghost-values=\\\"schedulerCtrl.setGhostValues(ghostValues)\\\"\\r\\n        ></br-multi-slider>\\r\\n      </div>\\r\\n    </div>\\r\\n  </br-schedule-area-container>\\r\\n\\r\\n  <br-restriction-explanations></br-restriction-explanations>\\r\\n\\r\\n  <div class=\\\"srow buttons\\\">\\r\\n    <button ng-class=\\\"schedulerCtrl.config.buttonClasses\\\" type=\\\"button\\\" ng-click=\\\"schedulerCtrl.rollback()\\\" ng-disabled=\\\"!schedulerCtrl.formController.$dirty\\\">Reset</button>\\r\\n    <button ng-class=\\\"schedulerCtrl.config.buttonClasses\\\" type=\\\"button\\\" ng-click=\\\"schedulerCtrl.save()\\\" ng-disabled=\\\"!schedulerCtrl.formController.$dirty || !schedulerCtrl.formController.$valid\\\" ng-if=\\\"schedulerCtrl.config.saveScheduler\\\">Save</button>\\r\\n    <button ng-class=\\\"schedulerCtrl.config.buttonClasses\\\" type=\\\"button\\\" ng-click=\\\"schedulerCtrl.resetZoom()\\\">Zoom Out</button>\\r\\n    <button ng-class=\\\"schedulerCtrl.config.buttonClasses\\\" type=\\\"button\\\" ng-click=\\\"schedulerCtrl.zoomIn()\\\">Zoom In</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"srow\\\" ng-if=\\\"schedulerCtrl.invalidMessage\\\">\\r\\n  {{ schedulerCtrl.invalidMessage }}\\r\\n</div>\";","import * as angular from 'angular';\r\nimport { WeeklySchedulerItemFactory } from './WeeklySchedulerItemFactory';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.weeklySchedulerItem', [])\r\n    .service(WeeklySchedulerItemFactory.$name, WeeklySchedulerItemFactory)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { DayMap } from '../weekly-scheduler-config/DayMap';\r\nimport { FillEmptyWithDefaultService } from '../fill-empty-with-default/FillEmptyWithDefaultService';\r\nimport { IInternalWeeklySchedulerItem } from '../weekly-scheduler-item/IInternalWeeklySchedulerItem';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerItem } from '../weekly-scheduler-item/IWeeklySchedulerItem';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { OverlapService } from '../overlap/OverlapService';\r\nimport { PurgeDefaultService } from '../purge-default/PurgeDefaultService';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\nimport { WeeklySchedulerRangeFactory } from '../weekly-scheduler-range/WeeklySchedulerRangeFactory';\r\n\r\n/** @internal */\r\nexport class WeeklySchedulerItemFactory {\r\n    static $name = 'brWeeklySchedulerItemFactory';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerDayMap',\r\n        'brWeeklySchedulerFillEmptyWithDefaultService',\r\n        'brWeeklySchedulerOverlapService',\r\n        'brWeeklySchedulerPurgeDefaultService',\r\n        'brWeeklySchedulerRangeFactory'\r\n    ];\r\n\r\n    private constructor(\r\n        private dayMap: DayMap,\r\n        private fillEmptyWithDefaultService: FillEmptyWithDefaultService,\r\n        private overlapService: OverlapService,\r\n        private purgeDefaultService: PurgeDefaultService,\r\n        private rangeFactory: WeeklySchedulerRangeFactory\r\n    ) {\r\n    }\r\n\r\n    public createItem(config: IWeeklySchedulerConfig<any>, day: number, schedules: IWeeklySchedulerRange<any>[]) {\r\n        let result: IInternalWeeklySchedulerItem<any>;\r\n\r\n        let builder: IWeeklySchedulerItem<any> = config.createItem(day, schedules);\r\n    \r\n        result = angular.extend(builder, { label: this.dayMap[day] });\r\n    \r\n        return new WeeklySchedulerItem(config, result, this.fillEmptyWithDefaultService, this.overlapService, this.purgeDefaultService, this.rangeFactory);\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { Days } from '../weekly-scheduler-config/Days';\r\nimport { FillEmptyWithDefaultService } from '../fill-empty-with-default/FillEmptyWithDefaultService';\r\nimport { IInternalWeeklySchedulerItem } from '../weekly-scheduler-item/IInternalWeeklySchedulerItem';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { OverlapService } from '../overlap/OverlapService';\r\nimport { PurgeDefaultService } from '../purge-default/PurgeDefaultService';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\nimport { WeeklySchedulerRangeFactory } from '../weekly-scheduler-range/WeeklySchedulerRangeFactory';\r\nimport { OverlapState } from '../weekly-scheduler-config/OverlapStates';\r\n\r\n/** Provides common functionality for an item -- pass it in and the resulting object will allow you to operate on it */\r\n/** @internal */\r\nexport class WeeklySchedulerItem<T> implements IInternalWeeklySchedulerItem<T> {\r\n    $isGhostOrigin: boolean;\r\n    $renderGhost: boolean;\r\n    day: Days;\r\n    editable: boolean;\r\n    label: string;\r\n    schedules: WeeklySchedulerRange<T>[];\r\n\r\n    constructor(\r\n        public config: IWeeklySchedulerConfig<T>,\r\n        item: IInternalWeeklySchedulerItem<T>,\r\n        private fillEmptyWithDefaultService: FillEmptyWithDefaultService,\r\n        private overlapService: OverlapService,\r\n        private purgeDefaultService: PurgeDefaultService,\r\n        private rangeFactory: WeeklySchedulerRangeFactory\r\n    ) {\r\n        this.day = item.day;\r\n        this.editable = angular.isDefined(item.editable) ? item.editable : true;\r\n        this.label = item.label;\r\n        this.schedules = item.schedules.map(schedule => rangeFactory.createRange(config, schedule));\r\n    }\r\n\r\n    public addSchedule(schedule: IWeeklySchedulerRange<T>) {\r\n        schedule.day = this.day;\r\n        const range = this.rangeFactory.createRange(this.config, schedule);\r\n        this.schedules.push(range);\r\n\r\n        return range;\r\n    }\r\n\r\n    public addScheduleAndMerge(schedule: IWeeklySchedulerRange<T>) {\r\n        let range = this.addSchedule(schedule);\r\n        this.mergeSchedule(range);\r\n\r\n        return range;\r\n    }\r\n\r\n    public canAddSchedule() {\r\n        if (this.config.nullEnds) {\r\n            return this.hasNoSchedules();\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /** Determine if the conditions allow for a pop-up editor */\r\n    public canEdit() {\r\n        let hasEditFunction = angular.isFunction(this.config.editSlot);\r\n\r\n        return this.editable && hasEditFunction;\r\n    }\r\n\r\n    /** Determine if a schedule is able to be modified */\r\n    public canEditSchedule(schedule: WeeklySchedulerRange<T>) {\r\n        let itemIsEditable = this.editable;\r\n        let scheduleIsEditable = schedule.editable;\r\n\r\n        return itemIsEditable && scheduleIsEditable;\r\n    }\r\n\r\n    /**\r\n     * Rather than having to deal with modifying mergeOverlaps to handle nullEnds calendars,\r\n     * just prevent the user from creating additional slots in nullEnds calendars unless there are no slots there already.\r\n     */\r\n    public canRenderGhost() {\r\n        // This one needs to come first, otherwise renderGhost being set to true would override the protection against addt'l slots in nullEnd calendars\r\n        if (this.config.nullEnds) {\r\n            return this.$renderGhost && this.hasNoSchedules();\r\n        }\r\n\r\n        return this.$renderGhost;\r\n    }\r\n\r\n    public hasSchedule(schedule: WeeklySchedulerRange<T>) {\r\n        return this.schedules.indexOf(schedule) > -1;\r\n    }\r\n\r\n    public hasNoSchedules() {\r\n        return this.schedules.length === 0;\r\n    }\r\n\r\n    public fillEmptySlotsWithDefaultSchedules() {\r\n        this.schedules = this.fillEmptyWithDefaultService.fill(this, this.config);\r\n    }\r\n\r\n    public forceNullEnds() {\r\n        this.schedules.forEach(s => s.end = null);\r\n    }\r\n\r\n    public mergeOverlaps() {\r\n        do {\r\n            this.schedules.forEach(schedule => this.mergeOverlapsForSchedule(schedule));\r\n        } while (this.needsOverlapsMerged());\r\n    }\r\n\r\n    public mergeSchedule(schedule: WeeklySchedulerRange<any>) {\r\n        // We consider the schedule we were working with to be the most important, so handle its overlaps first.\r\n        this.mergeOverlapsForSchedule(schedule);\r\n        this.mergeOverlaps();\r\n    }\r\n\r\n    public purgeDefaultSchedules() {\r\n        this.schedules = this.purgeDefaultService.purge(this.schedules, this.config);\r\n    }\r\n\r\n    public removeSchedule(schedule: WeeklySchedulerRange<T>) {\r\n        let schedules = this.schedules;\r\n\r\n        schedules.splice(schedules.indexOf(schedule), 1);\r\n\r\n        this.config.onRemove();\r\n    }\r\n\r\n    // Overlap handlers\r\n\r\n    private getOverlapHandler(overlapState: OverlapState) {\r\n        const overlapHandlers: { [key: number]: (current: WeeklySchedulerRange<any>, other: WeeklySchedulerRange<any>) => void; } = {\r\n            [OverlapState.NoOverlap]: (current, other) => this.handleNoOverlap(current, other),\r\n            [OverlapState.CurrentIsInsideOther]: (current, other) => this.handleCurrentIsInsideOther(current, other),\r\n            [OverlapState.CurrentCoversOther]: (current, other) => this.handleCurrentCoversOther(current, other),\r\n            [OverlapState.OtherEndIsInsideCurrent]: (current, other) => this.handleOtherEndIsInsideCurrent(current, other),\r\n            [OverlapState.OtherStartIsInsideCurrent]: (current, other) => this.handleOtherStartIsInsideCurrent(current, other),\r\n            [OverlapState.OtherEndIsCurrentStart]: (current, other) => this.handleOtherEndIsCurrentStart(current, other),\r\n            [OverlapState.OtherStartIsCurrentEnd]: (current, other) => this.handleOtherStartIsCurrentEnd(current, other)\r\n        };\r\n\r\n        return overlapHandlers[overlapState];\r\n    }\r\n\r\n    private handleCurrentCoversOther(current: WeeklySchedulerRange<any>, other: WeeklySchedulerRange<any>): void {\r\n        this.removeSchedule(other);\r\n    }\r\n\r\n    private handleCurrentIsInsideOther(current: WeeklySchedulerRange<any>, other: WeeklySchedulerRange<any>): void {\r\n        if (current.hasSameValueAs(other)) {\r\n            // Remove 'other' & make current expand to fit the other slot\r\n            this.removeSchedule(other);\r\n\r\n            current.update({\r\n                day: other.day,\r\n                start: other.start,\r\n                end: other.end,\r\n                value: other.value\r\n            });\r\n        } else {\r\n            // Just remove 'current'\r\n            this.removeSchedule(current);\r\n        }\r\n    }\r\n\r\n    private handleNoOverlap(current: IWeeklySchedulerRange<any>, other: IWeeklySchedulerRange<any>) {\r\n        // Do nothing\r\n    }\r\n\r\n    private handleOtherEndIsInsideCurrent(current: WeeklySchedulerRange<any>, other: WeeklySchedulerRange<any>): void {\r\n        if (current.hasSameValueAs(other)) {\r\n            this.removeSchedule(other);\r\n\r\n            current.update({\r\n                day: current.day,\r\n                start: other.start,\r\n                end: current.end,\r\n                value: other.value\r\n            });\r\n        } else {\r\n            other.update({\r\n                day: other.day,\r\n                start: other.start,\r\n                end: current.start,\r\n                value: current.value\r\n            });\r\n        }\r\n    }\r\n\r\n    private handleOtherStartIsInsideCurrent(current: WeeklySchedulerRange<any>, other: WeeklySchedulerRange<any>): void {\r\n        if (current.hasSameValueAs(other)) {\r\n            this.removeSchedule(other);\r\n\r\n            current.update({\r\n                day: current.day,\r\n                start: current.start,\r\n                end: other.end,\r\n                value: other.value\r\n            });\r\n        } else {\r\n            other.update({\r\n                day: other.day,\r\n                start: current.end,\r\n                end: other.end,\r\n                value: other.value\r\n            });\r\n        }\r\n    }\r\n\r\n    private handleOtherEndIsCurrentStart(current: WeeklySchedulerRange<any>, other: WeeklySchedulerRange<any>): void {\r\n        if (current.hasSameValueAs(other)) {\r\n            this.handleOtherEndIsInsideCurrent(current, other);\r\n        } else {\r\n            // DO NOTHING, this is okay if the values don't match\r\n        }\r\n    }\r\n\r\n    private handleOtherStartIsCurrentEnd(current: WeeklySchedulerRange<any>, other: WeeklySchedulerRange<any>): void {\r\n        if (current.hasSameValueAs(other)) {\r\n            this.handleOtherStartIsInsideCurrent(current, other);\r\n        } else {\r\n            // DO NOTHING, this is okay if the values don't match\r\n        }\r\n    }\r\n\r\n    // End overlap handlers\r\n    private mergeOverlapsForSchedule(schedule: WeeklySchedulerRange<any>) {\r\n        let schedules = this.schedules;\r\n\r\n        schedules.forEach(el => {\r\n            if (!el.equals(schedule)) {\r\n                let schedulesBothEditable = el.editable && schedule.editable;\r\n\r\n                if (schedulesBothEditable) {\r\n                    let overlapState = this.overlapService.getOverlapState(this.config, schedule, el);\r\n                    let overlapHandler = this.getOverlapHandler(overlapState);\r\n\r\n                    overlapHandler(schedule, el);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private needsOverlapsMerged() {\r\n        let len = this.schedules.length;\r\n\r\n        // Compare two at a time\r\n        for (let i = 0; i < len - 1; i += 1) {\r\n            let current = this.schedules[i];\r\n            let next = this.schedules[i + 1];\r\n\r\n            let schedulesBothEditable = current.editable && next.editable;\r\n\r\n            if (!schedulesBothEditable) {\r\n                return false;\r\n            }\r\n\r\n            if (current.hasSameValueAs(next)) {\r\n                let overlapState = this.overlapService.getOverlapState(this.config, current, next);\r\n\r\n                return [OverlapState.OtherEndIsCurrentStart, OverlapState.OtherStartIsCurrentEnd].indexOf(overlapState) > -1;\r\n            }\r\n        }\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { WeeklySchedulerRangeFactory } from './WeeklySchedulerRangeFactory';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.weeklySchedulerRange', [])\r\n    .service(WeeklySchedulerRangeFactory.$name, WeeklySchedulerRangeFactory)\r\n    .name;\r\n","import { EndAdjusterService } from '../end-adjuster/EndAdjusterService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\n\r\n/** @internal */\r\nexport class WeeklySchedulerRangeFactory {\r\n    static $name = 'brWeeklySchedulerRangeFactory';\r\n\r\n    static $inject = [\r\n        'brWeeklySchedulerEndAdjusterService'\r\n    ];\r\n\r\n    private constructor(\r\n        private endAdjusterService: EndAdjusterService\r\n    ) {\r\n    }\r\n\r\n    public createRange(config: IWeeklySchedulerConfig<any>, schedule: IWeeklySchedulerRange<any>) {\r\n        return new WeeklySchedulerRange(config, schedule, this.endAdjusterService);\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { Days } from '../weekly-scheduler-config/Days';\r\nimport { EndAdjusterService } from '../end-adjuster/EndAdjusterService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from './IWeeklySchedulerRange';\r\n\r\n\r\n/** Provides common functionality for a schedule -- pass it in and the resulting object will allow you to operate on it */\r\n/** @internal */\r\nexport class WeeklySchedulerRange<T> implements IWeeklySchedulerRange<T> {\r\n    $class: string;\r\n    $isActive: boolean;\r\n    $isDeleting: boolean;\r\n    $isEditing: boolean;\r\n\r\n    day: Days;\r\n    start: number;\r\n    end: number;\r\n    value: T;\r\n\r\n    editable: boolean;\r\n\r\n    constructor(\r\n        private config: IWeeklySchedulerConfig<T>,\r\n        schedule: IWeeklySchedulerRange<T>,\r\n        private endAdjusterService: EndAdjusterService\r\n    ) {\r\n        this.$class = schedule.$class;\r\n        this.$isActive = schedule.$isActive;\r\n        this.$isDeleting = schedule.$isDeleting;\r\n        this.$isEditing = schedule.$isEditing;\r\n        this.day = schedule.day;\r\n        this.start = schedule.start;\r\n        this.end = schedule.end;\r\n        this.value = schedule.value;\r\n        this.editable = angular.isDefined(schedule.editable) ? schedule.editable : true;\r\n    }\r\n\r\n    get duration() {\r\n        return this.end - this.start;\r\n    }\r\n\r\n    public equals(other: WeeklySchedulerRange<T>) {\r\n        return angular.equals(this, other);\r\n    }\r\n\r\n    public hasSameValueAs(other: WeeklySchedulerRange<T>) {\r\n        return this.value === other.value;\r\n    }\r\n\r\n    public update(updatedSchedule: IWeeklySchedulerRange<T>) {\r\n        let updatedStart = this.updateStart(updatedSchedule.start);\r\n        let updatedEnd = this.updateEnd(updatedSchedule.end);\r\n\r\n        if (updatedStart || updatedEnd) {\r\n            this.config.onChange();\r\n        }\r\n    }\r\n\r\n    public updateEnd(updatedEnd: number) {\r\n        if (this.canUpdateEnd(updatedEnd)) {\r\n            this.end = this.endAdjusterService.adjustEndForModel(this.config, updatedEnd);\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    public updateStart(updatedStart: number) {\r\n        if (this.canUpdateStart(updatedStart)) {\r\n            this.start = updatedStart;\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    private canUpdateEnd(updatedEnd: number) {\r\n        let changed = this.end !== updatedEnd;\r\n        let newEndBeforeOrAtMax = updatedEnd <= this.config.maxValue;\r\n        let newEndAfterOrAtExistingStart = this.endAdjusterService.adjustEndForView(this.config, updatedEnd) >= this.start + 1;\r\n\r\n        return changed && newEndBeforeOrAtMax && newEndAfterOrAtExistingStart;\r\n    }\r\n\r\n    private canUpdateStart(updatedStart: number) {\r\n        let changed = this.start !== updatedStart;\r\n        let newStartBeforeOrAtExistingEnd = updatedStart <= this.endAdjusterService.adjustEndForView(this.config, this.end) - 1;\r\n        let newStartAfterOrAtMin = updatedStart >= 0;\r\n\r\n        return changed && (this.config.nullEnds || newStartBeforeOrAtExistingEnd) && newStartAfterOrAtMin;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { WeeklySlotComponent, WeeklySlotController } from './weekly-slot';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.weeklySlot', [])\r\n    .component(WeeklySlotComponent.$name, new WeeklySlotComponent())\r\n    .controller(WeeklySlotController.$name, WeeklySlotController)\r\n    .name;\r\n","import * as angular from 'angular';\r\nimport { DragService } from '../drag/DragService';\r\nimport { IWeeklySchedulerConfig } from '../weekly-scheduler-config/IWeeklySchedulerConfig';\r\nimport { IWeeklySchedulerRange } from '../weekly-scheduler-range/IWeeklySchedulerRange';\r\nimport { WeeklySchedulerItem } from '../weekly-scheduler-item/WeeklySchedulerItem';\r\nimport { WeeklySchedulerRange } from '../weekly-scheduler-range/WeeklySchedulerRange';\r\nimport { WeeklySchedulerEvents } from '../weekly-scheduler-config/WeeklySchedulerEvents';\r\n\r\n/** @internal */\r\nexport class WeeklySlotController implements angular.IComponentController {\r\n  static $name = 'weeklySlotController';\r\n  static $controllerAs = 'weeklySlotCtrl';\r\n\r\n  static $inject = [\r\n    '$element',\r\n    '$rootScope',\r\n    '$scope',\r\n    'brWeeklySchedulerDragService'\r\n  ];\r\n\r\n  private config: IWeeklySchedulerConfig<any>;\r\n  private ngModelCtrl: angular.INgModelController;\r\n\r\n  private editSchedule: (options: { schedule: IWeeklySchedulerRange<any> }) => void;\r\n  private getDelta: (options: { pixel: number }) => number;\r\n\r\n  private item: WeeklySchedulerItem<any>;\r\n  private dragSchedule: WeeklySchedulerRange<any>;\r\n  private schedule: WeeklySchedulerRange<any>;\r\n\r\n  private valuesOnDragStart: WeeklySchedulerRange<any>;\r\n\r\n  constructor(\r\n    private $element: angular.IAugmentedJQuery,\r\n    private $rootScope: angular.IRootScopeService,\r\n    private $scope: angular.IScope,\r\n    private dragService: DragService,\r\n  ) {\r\n  }\r\n\r\n  get hasDragSchedule() {\r\n    return angular.isDefined(this.dragSchedule) && this.dragSchedule != null;\r\n  }\r\n\r\n  private getDragStartValues() {\r\n    return this.dragService.getDragRangeFromSchedule(this.config, this.schedule);\r\n  }\r\n\r\n  public editSelf() {\r\n    this.editSchedule({ schedule: this.schedule });\r\n  }\r\n\r\n  public drag(pixel: number) {\r\n    let ui = this.schedule;\r\n    let delta = this.getDelta({ pixel: pixel });\r\n\r\n    let newStart = Math.round(this.valuesOnDragStart.start + delta);\r\n    let newEnd = this.config.nullEnds ? null : Math.round(newStart + this.valuesOnDragStart.duration);\r\n\r\n    this.schedule.update({\r\n      day: ui.day,\r\n      start: newStart,\r\n      end: newEnd,\r\n      value: ui.value\r\n    });\r\n  }\r\n\r\n  public endDrag() {\r\n    // If the schedule was moved to another item, the $scope hierarchy will have been broken, so we need to broadcast this to the whole app\r\n    this.$rootScope.$broadcast(WeeklySchedulerEvents.DRAG_ENDED);\r\n    \r\n    // Was the schedule moved to another item??\r\n    if (!this.item.hasSchedule(this.schedule)) {\r\n      return;\r\n    }\r\n\r\n    // Did the user actually move or resize the slot??\r\n    var changed: boolean = !this.valuesOnDragStart.equals(this.getDragStartValues());\r\n\r\n    this.schedule.$isActive = false;\r\n\r\n    if (changed) {\r\n      this.ngModelCtrl.$setDirty();\r\n      this.item.mergeSchedule(this.schedule);\r\n    } else {\r\n      this.editSelf();\r\n    }\r\n  }\r\n\r\n  public endResize() {\r\n    // Did the user actually move or resize the slot??\r\n    var changed: boolean = !this.valuesOnDragStart.equals(this.getDragStartValues());\r\n\r\n    this.schedule.$isActive = false;\r\n\r\n    if (changed) {\r\n      this.ngModelCtrl.$setDirty();\r\n      this.item.mergeSchedule(this.schedule);\r\n    } else {\r\n      this.editSelf();\r\n    }\r\n  }\r\n\r\n  public resizeStart(pixel: number) {\r\n    let delta = this.getDelta({ pixel: pixel });\r\n    let newStart = Math.round(this.valuesOnDragStart.start + delta);\r\n\r\n    if (this.schedule.updateStart(newStart)) {\r\n      this.config.onChange();\r\n    }\r\n  }\r\n\r\n  public resizeEnd(pixel: number) {\r\n    let delta = this.getDelta({ pixel: pixel });\r\n    let newEnd = Math.round(this.valuesOnDragStart.end + delta);\r\n\r\n    if (this.schedule.updateEnd(newEnd)) {\r\n      this.config.onChange();\r\n    }\r\n  }\r\n\r\n  public startDrag() {\r\n    if (!this.item.canEditSchedule(this.schedule)){\r\n      return;\r\n    }\r\n\r\n    this.$scope.$emit(WeeklySchedulerEvents.SLOT_DRAGGED, this.schedule);\r\n    this.schedule.$isActive = true;\r\n    this.valuesOnDragStart = this.getDragStartValues();\r\n  }\r\n\r\n  public startResize() {\r\n    if (!this.item.canEditSchedule(this.schedule)) {\r\n      return;\r\n    }\r\n    \r\n    this.schedule.$isActive = true;\r\n    this.valuesOnDragStart = this.getDragStartValues();\r\n  }\r\n}\r\n\r\n/** @internal */\r\nexport class WeeklySlotComponent implements angular.IComponentOptions {\r\n  static $name = 'brWeeklySlot';\r\n  \r\n  bindings = {\r\n    config: '<',\r\n    dragSchedule: '<',\r\n    item: '<',\r\n    schedule: '=ngModel',\r\n    editSchedule: '&',\r\n    getDelta: '&'\r\n  };\r\n\r\n  controller = WeeklySlotController.$name;\r\n  controllerAs = WeeklySlotController.$controllerAs;\r\n\r\n  require = {\r\n    ngModelCtrl: 'ngModel'\r\n  };\r\n\r\n  template = require('./weekly-slot.html');\r\n}\r\n","module.exports = \"<div class=\\\"slotWrapper\\\" title=\\\"{{weeklySlotCtrl.schedule.start | brWeeklySchedulerTimeOfDay}} - {{weeklySlotCtrl.schedule.end | brWeeklySchedulerTimeOfDay}}\\\">\\r\\n  <div class=\\\"handle left\\\" ondrag=\\\"weeklySlotCtrl.resizeStart(delta)\\\" ondragstart=\\\"weeklySlotCtrl.startResize()\\\" ondragstop=\\\"weeklySlotCtrl.endResize()\\\" br-handle ng-if=\\\"!weeklySlotCtrl.config.nullEnds\\\"></div>\\r\\n  <div class=\\\"middle\\\" ondrag=\\\"weeklySlotCtrl.drag(delta)\\\" ondragstart=\\\"weeklySlotCtrl.startDrag()\\\" ondragstop=\\\"weeklySlotCtrl.endDrag()\\\" br-handle immediate=\\\"weeklySlotCtrl.hasDragSchedule\\\">\\r\\n    <br-time-range schedule=\\\"weeklySlotCtrl.schedule\\\"></br-time-range>\\r\\n  </div>\\r\\n  <div class=\\\"handle right\\\" ondrag=\\\"weeklySlotCtrl.resizeEnd(delta)\\\" ondragstart=\\\"weeklySlotCtrl.startResize()\\\" ondragstop=\\\"weeklySlotCtrl.endResize()\\\" br-handle ng-if=\\\"!weeklySlotCtrl.config.nullEnds\\\"></div>\\r\\n</div>\";","import * as angular from 'angular';\r\nimport { ValueNormalizationService } from './ValueNormalizationService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.valueNormalization', [])\r\n    .service(ValueNormalizationService.$name, ValueNormalizationService)\r\n    .name;\r\n","/** @internal */\r\nexport class ValueNormalizationService {\r\n    static $name = 'brWeeklySchedulerValueNormalizationService';\r\n\r\n    public normalizeValue(value: number, min: number, max: number) {\r\n        if (value < min) {\r\n            return min;\r\n        }\r\n\r\n        if (value > max) {\r\n            return max;\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n","import * as angular from 'angular';\r\nimport { ZoomService } from './ZoomService';\r\n\r\nexport default angular\r\n    .module('rr.weeklyScheduler.zoom', [])\r\n    .service(ZoomService.$name, ZoomService)\r\n    .name;\r\n","import { WeeklySchedulerEvents } from '../weekly-scheduler-config/WeeklySchedulerEvents';\r\n\r\n/** @internal */\r\nexport class ZoomService {\r\n    static $name = 'brWeeklySchedulerZoomService';\r\n\r\n    static $inject = ['$rootScope'];\r\n\r\n    private constructor(\r\n        private $rootScope: angular.IRootScopeService\r\n    ) {\r\n    }\r\n\r\n    private selector: string = '.schedule-area';\r\n\r\n    private broadcastZoomedInEvent() {\r\n        this.$rootScope.$broadcast(WeeklySchedulerEvents.ZOOMED_IN);\r\n    }\r\n\r\n    private broadcastZoomedOutEvent() {\r\n        this.$rootScope.$broadcast(WeeklySchedulerEvents.ZOOMED_OUT);\r\n    }\r\n\r\n    private getCurrentZoomWidth(element: any): number {\r\n        return parseInt(element.querySelector(this.selector).style.width, 10);\r\n    }\r\n\r\n    private getZoomElement(container: any) {\r\n        return container.querySelector(this.selector);\r\n    }\r\n\r\n    private setZoomWidth(element: any, width: string): void {\r\n       this.getZoomElement(element).style.width = width;\r\n    }\r\n\r\n    public resetZoom(element: any) {\r\n        this.setZoomWidth(element, '100%');\r\n        this.broadcastZoomedOutEvent();\r\n    }\r\n    \r\n    public zoomIn(element: any) {\r\n        // get current zoom level from zoomed element as a percentage\r\n        let zoom = this.getZoomElement(element).style.width;\r\n        \r\n        // parse to integer & double\r\n        let level = parseInt(zoom, 10) * 2;\r\n\r\n        // Convert back to percentage\r\n        this.setZoomWidth(element, level + '%');\r\n\r\n        this.broadcastZoomedInEvent();\r\n    }\r\n\r\n    public zoomInACell(element: any, event: angular.IAngularEvent, data: any) {\r\n        let elementCount = data.nbElements;\r\n        let i = data.idx;\r\n\r\n        let containerWidth = element.offsetWidth;\r\n\r\n        let boxesToDisplay = 5;\r\n        let boxWidth = containerWidth / boxesToDisplay;\r\n\r\n        let boxesToSkip = 2;\r\n        let gutterSize = boxWidth * boxesToSkip;\r\n\r\n        var scheduleAreaWidthPx = elementCount * boxWidth;\r\n        var scheduleAreaWidthPercent = (scheduleAreaWidthPx / containerWidth) * 100;\r\n\r\n        this.setZoomWidth(element, scheduleAreaWidthPercent + '%');\r\n\r\n        // All cells of a line have the same size\r\n        element.scrollLeft = i * boxWidth - gutterSize;\r\n\r\n        this.broadcastZoomedInEvent();\r\n    }\r\n\r\n    public zoomByScroll(element: any, event: WheelEvent, delta: number) {\r\n        let currentWidth = this.getCurrentZoomWidth(element);\r\n\r\n        if ((event.wheelDelta || event.detail) > 0) {\r\n            this.setZoomWidth(element, (currentWidth + 2 * delta) + '%');\r\n            this.broadcastZoomedInEvent();\r\n        } else {\r\n            let width = currentWidth - 2 * delta;\r\n            this.setZoomWidth(element, (width > 100 ? width : 100) + '%');\r\n            this.broadcastZoomedOutEvent();\r\n        }\r\n    }\r\n}\r\n","export * from './ng-weekly-scheduler/adapter/IWeeklySchedulerAdapter';\r\nexport * from './ng-weekly-scheduler/resize/IResizeServiceProvider';\r\nexport * from './ng-weekly-scheduler/restriction-explanations/RestrictionExplanations';\r\nexport * from './ng-weekly-scheduler/schedule-count/ScheduleCountOptions';\r\nexport * from './ng-weekly-scheduler/weekly-scheduler-config/Days';\r\nexport * from './ng-weekly-scheduler/weekly-scheduler-config/IWeeklySchedulerOptions';\r\nexport * from './ng-weekly-scheduler/weekly-scheduler-item/IWeeklySchedulerItem';\r\nexport * from './ng-weekly-scheduler/weekly-scheduler-range/IWeeklySchedulerRange';\r\n\r\nimport * as angular from 'angular';\r\nimport AppModule from './ng-weekly-scheduler/app/module';\r\n\r\nangular.module('br.weeklyScheduler', [AppModule]);"],"sourceRoot":""}